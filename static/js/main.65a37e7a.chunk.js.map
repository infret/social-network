{"version":3,"sources":["resources/heart.svg","resources/heart-fill.svg","store.ts","components/User.tsx","resources/confirm.svg","components/Input.tsx","components/Post.tsx","components/Feed.tsx","components/Profile.tsx","components/Chats.tsx","components/Chat.tsx","resources/close.svg","components/Explore.tsx","resources/profile.svg","resources/home.svg","resources/message.svg","resources/search.svg","resources/plus.svg","components/Header.tsx","components/Followers.tsx","components/Following.tsx","components/Liked.tsx","components/Login.tsx","resources/back.svg","components/MobileHeader.tsx","index.tsx"],"names":["Post","types","model","id","number","img","string","date","Message","recipient_id","text","Comment","post_id","User","username","avatar","status","posts","array","messages","comments","following","likedPosts","timeSince","time","Math","round","Date","now","store","currentUserId","searchBy","users","actions","self","createUser","push","length","createPost","alert","createMessage","createComment","toggleLike","includes","splice","indexOf","toggleFollow","setSearch","search","setCurrentUser","filter","user","loadStore","json","JSON","parse","localStorage","getItem","create","Component","styled","NavLink","Username","p","Avatar","props","to","link","src","Form","div","height","Textarea","textarea","Button","button","ConfirmIcon","Input","useRef","useState","setHeight","ref","onChange","current","scrollHeight","value","placeholder","onClick","onclick","PostImg","PostBody","PostHeader","Actions","icon","CommentText","CommentDate","Comments","observer","map","comment","sort","a","b","match","HeartFillIcon","HeartIcon","likes","Page","Placeholder","h1","Link","Feed","document","title","post","ProfileDesc","DescBody","Name","h2","LinkButton","Status","pre","Posts","Container","Profile","userId","slice","Chats","chats","message","item","pos","Header","Messages","MessageBubble","InputContainer","Chat","window","innerHeight","getMessages","Searchbar","input","CloseIcon","Overlay","Explore","type","e","target","toLowerCase","AppHeader","header","HeaderContainer","HeaderLogo","Nav","nav","$active","location","pathname","url","setUrl","overlay","setOverlay","useHistory","listen","HomeIcon","alt","SearchIcon","PlusIcon","MessengerIcon","ProfileIcon","Heading","Followers","Following","Liked","Note","Login","isShown","setIsShown","useEffect","setTimeout","loginUsername","registerUsername","href","MobileHeader","BackIcon","setTitle","history","split","goBack","withRouter","GlobalStyle","createGlobalStyle","Body","Main","App","data","setItem","stringify","init","innerWidth","width","setWidth","useLayoutEffect","addEventListener","removeEventListener","path","component","exact","render","parseInt","replace","substring","lastIndexOf","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.65a37e7a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/heart.d2ce417e.svg\";","export default __webpack_public_path__ + \"static/media/heart-fill.b74f501e.svg\";","import { Instance, types } from 'mobx-state-tree'\r\n\r\nconst Post = types.model({\r\n  id: types.number,\r\n  img: types.string,\r\n  date: types.number\r\n})\r\n\r\nconst Message = types.model({\r\n  recipient_id: types.number,\r\n  text: types.string,\r\n  date: types.number\r\n})\r\n\r\nconst Comment = types.model({\r\n  post_id: types.number,\r\n  text: types.string,\r\n  date: types.number\r\n})\r\n\r\nconst User = types.model({\r\n  id: types.number,\r\n  username: types.string,\r\n  avatar: types.string,\r\n  status: types.string,\r\n  posts: types.array(Post),\r\n  messages: types.array(Message),\r\n  comments: types.array(Comment),\r\n  following: types.array(types.number),\r\n  likedPosts: types.array(types.number)\r\n})\r\n\r\nconst Store = types\r\n  .model({\r\n    currentUserId: types.number,\r\n    searchBy: types.string,\r\n    users: types.array(User)\r\n  })\r\n  .actions((self) => ({\r\n    createUser(username: string, avatar: string, status: string) {\r\n      avatar !== ''\r\n        ? self.users.push({\r\n            id: self.users.length,\r\n            username,\r\n            avatar,\r\n            status,\r\n            posts: [],\r\n            messages: [],\r\n            comments: [],\r\n            following: [],\r\n            likedPosts: []\r\n          })\r\n        : self.users.push({\r\n            id: self.users.length,\r\n            username,\r\n            avatar:\r\n              'https://images.unsplash.com/photo-1544502062-f82887f03d1c?ixlib=rb-1.2.1&ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&auto=format&fit=crop&w=1427&q=80',\r\n            status,\r\n            posts: [],\r\n            messages: [],\r\n            comments: [],\r\n            following: [],\r\n            likedPosts: []\r\n          })\r\n    },\r\n    createPost(img: string) {\r\n      img\r\n        ? self.users[self.currentUserId].posts.push({\r\n            id: self.users[self.currentUserId].posts.length + 1,\r\n            img,\r\n            date: Date.now() / 1000\r\n          })\r\n        : alert('No image provided')\r\n    },\r\n    createMessage(text: string, recipient_id: number) {\r\n      self.users[self.currentUserId].messages.push({\r\n        recipient_id,\r\n        text,\r\n        date: Date.now() / 1000\r\n      })\r\n    },\r\n    createComment(text: string, post_id: number) {\r\n      self.users[self.currentUserId].comments.push({\r\n        post_id,\r\n        text,\r\n        date: Date.now() / 1000\r\n      })\r\n    },\r\n    toggleLike(id: number) {\r\n      self.users[self.currentUserId].likedPosts.includes(id)\r\n        ? self.users[self.currentUserId].likedPosts.splice(\r\n            self.users[self.currentUserId].likedPosts.indexOf(id),\r\n            1\r\n          )\r\n        : self.users[self.currentUserId].likedPosts.push(id)\r\n    },\r\n    toggleFollow(id: number) {\r\n      self.users[self.currentUserId].following.includes(id)\r\n        ? self.users[self.currentUserId].following.splice(\r\n            self.users[self.currentUserId].following.indexOf(id),\r\n            1\r\n          )\r\n        : self.users[self.currentUserId].following.push(id)\r\n    },\r\n    setSearch(search: string) {\r\n      self.searchBy = search\r\n    },\r\n    setCurrentUser(username?: string) {\r\n      !username\r\n        ? (self.currentUserId = -1)\r\n        : (self.currentUserId = self.users.filter((user) => user.username === username)[0].id)\r\n    },\r\n    loadStore() {\r\n      let json = JSON.parse(localStorage.getItem('store')!)\r\n      self.users = json.users\r\n      self.currentUserId = json.currentUserId\r\n      self.searchBy = json.searchBy\r\n    }\r\n  }))\r\n\r\nconst store = Store.create({\r\n  currentUserId: -1,\r\n  searchBy: '',\r\n  users: [\r\n    {\r\n      id: 0,\r\n      username: 'infret',\r\n      avatar:\r\n        'https://images.unsplash.com/photo-1503212556734-c0ca0c49c8b0?ixlib=rb-1.2.1&ixid=MXwxMjA3fDB8MHxzZWFyY2h8MjF8fHNpbGhvdWV0dGV8ZW58MHwyfDB8&auto=format&fit=crop&w=400&q=60',\r\n      status: `The Creator in person`,\r\n      posts: [\r\n        {\r\n          id: 0,\r\n          date: 1613840000,\r\n          img:\r\n            'https://images.unsplash.com/photo-1613572596126-23969094b944?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=634&q=80'\r\n        },\r\n        {\r\n          id: 4,\r\n          date: 1613849000,\r\n          img:\r\n            'https://images.unsplash.com/photo-1613586020253-fb6fe0b04269?ixid=MXwxMjA3fDB8MHxlZGl0b3JpYWwtZmVlZHw4MXx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=600&q=60'\r\n        }\r\n      ],\r\n      messages: [\r\n        {\r\n          recipient_id: 1,\r\n          text: 'Sup',\r\n          date: 1613847000\r\n        },\r\n        {\r\n          recipient_id: 2,\r\n          text: 'How are you?',\r\n          date: 1613840000\r\n        }\r\n      ],\r\n      comments: [\r\n        {\r\n          post_id: 0,\r\n          text: 'Sample post with text and image',\r\n          date: 1613840000\r\n        },\r\n        {\r\n          post_id: 3,\r\n          text:\r\n            \"Sample comment with a ton of post-related text. There are so many words that they look like they wouldn't fit, but they do with some text wrapping and comment sizing.\",\r\n          date: 1613899000\r\n        },\r\n        {\r\n          post_id: 2,\r\n          text: 'Sample comment',\r\n          date: 1613847000\r\n        }\r\n      ],\r\n      following: [1, 2, 3, 4],\r\n      likedPosts: [3, 4]\r\n    },\r\n    {\r\n      id: 1,\r\n      username: 'ryanmiller',\r\n      avatar:\r\n        'https://images.unsplash.com/photo-1457449940276-e8deed18bfff?ixid=MXwxMjA3fDB8MHxzZWFyY2h8NHx8cHJvZmlsZXxlbnwwfHwwfA%3D%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=600&q=60',\r\n      status: `Somewhat busy nowadays`,\r\n      posts: [\r\n        {\r\n          id: 1,\r\n          date: 1613820000,\r\n          img:\r\n            'https://images.unsplash.com/photo-1613568409506-e70370442e6e?ixid=MXwxMjA3fDB8MHxlZGl0b3JpYWwtZmVlZHw1MXx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=600&q=60'\r\n        }\r\n      ],\r\n      messages: [\r\n        {\r\n          recipient_id: 0,\r\n          text: 'Hey',\r\n          date: 1613848000\r\n        }\r\n      ],\r\n      comments: [\r\n        {\r\n          post_id: 1,\r\n          text: 'Sample post from me',\r\n          date: 1613820000\r\n        }\r\n      ],\r\n      following: [0],\r\n      likedPosts: [1]\r\n    },\r\n    {\r\n      id: 2,\r\n      username: 'russelcooper',\r\n      avatar:\r\n        'https://images.unsplash.com/photo-1511367461989-f85a21fda167?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1778&q=80',\r\n      status: `All everybody wants is to drink molten chocolate in front of the window in the rainy day`,\r\n      posts: [\r\n        {\r\n          id: 2,\r\n          date: 1613700000,\r\n          img:\r\n            'https://images.unsplash.com/photo-1564869115811-96da66f0557f?ixid=MXwxMjA3fDB8MHxzZWFyY2h8N3x8bmF0dXJlJTIwZ3JlZW58ZW58MHwyfDB8&ixlib=rb-1.2.1&auto=format&fit=crop&w=600&q=60'\r\n        }\r\n      ],\r\n      messages: [\r\n        {\r\n          recipient_id: 0,\r\n          text: `I'm fine. What's about you?`,\r\n          date: 1613848000\r\n        }\r\n      ],\r\n      comments: [\r\n        {\r\n          post_id: 3,\r\n          text: 'Another sample comment',\r\n          date: 1613847000\r\n        }\r\n      ],\r\n      following: [0, 1, 4],\r\n      likedPosts: [3]\r\n    },\r\n    {\r\n      id: 3,\r\n      username: 'anastasialeonore',\r\n      avatar:\r\n        'https://images.unsplash.com/photo-1511963211013-83bba110595d?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=80',\r\n      status: `Self-taught photographer`,\r\n      posts: [],\r\n      messages: [],\r\n      comments: [\r\n        {\r\n          post_id: 3,\r\n          text: 'More sample comments on this post!',\r\n          date: 1613849000\r\n        }\r\n      ],\r\n      following: [0, 2],\r\n      likedPosts: [1, 3, 4]\r\n    },\r\n    {\r\n      id: 4,\r\n      username: 'alicehierro',\r\n      avatar:\r\n        'https://images.unsplash.com/photo-1483884105135-c06ea81a7a80?ixid=MXwxMjA3fDB8MHxzZWFyY2h8N3x8c2lsaG91ZXR0ZXxlbnwwfHwwfA%3D%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=600&q=60',\r\n      status: `be better than you were yesterday!`,\r\n      posts: [\r\n        {\r\n          id: 3,\r\n          text: '',\r\n          date: 1613841000,\r\n          img:\r\n            'https://images.unsplash.com/photo-1613591767283-c120294bb16b?ixid=MXwxMjA3fDB8MHxlZGl0b3JpYWwtZmVlZHw0Nnx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=600&q=60'\r\n        }\r\n      ],\r\n      messages: [],\r\n      comments: [\r\n        { post_id: 3, text: 'Post with some text about this and that', date: 1614000000 },\r\n        {\r\n          post_id: 4,\r\n          text: 'Sample comment from sample user',\r\n          date: 1613847000\r\n        }\r\n      ],\r\n      following: [0, 1],\r\n      likedPosts: []\r\n    }\r\n  ]\r\n})\r\n\r\nexport function timeSince(date: number) {\r\n  let time: number = Math.round((Date.now() / 1000 - date) / 60)\r\n  if (time <= 1) {\r\n    return 'just now'\r\n  }\r\n  if (time > 1 && time < 60) {\r\n    return Math.round(time) + ' minutes ago'\r\n  }\r\n  if (time > 60 && time < 1440) {\r\n    return Math.round(time / 60) === 1 ? '1 hour ago' : Math.round(time / 60) + ' hours ago'\r\n  }\r\n  if (time > 1440 && time < 43829.1) {\r\n    return Math.round(time / 1440) === 1 ? '1 day ago' : Math.round(time / 1440) + ' days ago'\r\n  }\r\n  if (time > 43829.1 && time < 525949.2) {\r\n    return Math.round(time / 43829.1) === 1\r\n      ? '1 month ago'\r\n      : Math.round(time / 43829.1) + ' months ago'\r\n  }\r\n  if (time > 525949.2) {\r\n    return Math.round(time / 525949.2) === 1\r\n      ? '1 year ago'\r\n      : Math.round(time / 525949.2) + 'years ago'\r\n  }\r\n}\r\n\r\nexport interface IStore extends Instance<typeof store> {}\r\nexport interface IUser extends Instance<typeof User> {}\r\n\r\nexport default store\r\n","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport { IUser } from '../store'\r\n\r\nconst Component = styled(NavLink)`\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n`\r\n\r\nconst Username = styled.p`\r\n  color: black;\r\n  text-decoration: none;\r\n  font-weight: 600;\r\n`\r\n\r\nconst Avatar = styled.img`\r\n  border-radius: 50%;\r\n  width: 40px;\r\n  height: 40px;\r\n  margin: 10px;\r\n  object-fit: cover;\r\n`\r\n\r\ninterface Props {\r\n  user: IUser\r\n  link: string\r\n}\r\n\r\nexport default function User(props: Props) {\r\n  return (\r\n    <Component to={props.link + props.user.id}>\r\n      <Avatar src={props.user.avatar} />\r\n      <Username>{props.user.username}</Username>\r\n    </Component>\r\n  )\r\n}","export default __webpack_public_path__ + \"static/media/confirm.68abc7e1.svg\";","import React, { MutableRefObject, useRef, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport ConfirmIcon from '../resources/confirm.svg'\r\n\r\nconst Form = styled.div<{ height: number }>`\r\n  display: flex;\r\n  height: ${(props) => props.height + 'px'};\r\n  align-items: center;\r\n  padding: 16px 0 4px 0;\r\n  width: 100%;\r\n`\r\n\r\nconst Textarea = styled.textarea`\r\n  width: 100%;\r\n  font-size: 15px;\r\n  height: 100%;\r\n  vertical-align: middle;\r\n  margin: 0 0 0 12px;\r\n`\r\n\r\nconst Button = styled.button`\r\n  background-repeat: no-repeat;\r\n  background-position: center;\r\n  height: 100%;\r\n  width: 40px;\r\n  margin: 0 8px 12px 4px;\r\n  background-image: url(${ConfirmIcon});\r\n  cursor: pointer;\r\n`\r\n\r\ninterface Props {\r\n  id?: any\r\n  onclick: (text: string, id: number) => void\r\n  placeholder: string\r\n}\r\n\r\nexport default function Input(props: Props) {\r\n  let textarea = useRef() as MutableRefObject<HTMLTextAreaElement>\r\n  const [height, setHeight] = useState(30)\r\n\r\n  function handleChange() {\r\n    height < 100 && setHeight(textarea.current.scrollHeight)\r\n    textarea.current.value === '' && setHeight(30)\r\n  }\r\n\r\n  return (\r\n    <Form height={height}>\r\n      <Textarea ref={textarea} onChange={handleChange} placeholder={props.placeholder} />\r\n      <Button\r\n        onClick={() => {\r\n          textarea.current.value && props.onclick(textarea.current.value, props.id)\r\n          textarea.current.value = ''\r\n          setHeight(30)\r\n        }}\r\n      ></Button>\r\n    </Form>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport HeartIcon from '../resources/heart.svg'\r\nimport HeartFillIcon from '../resources/heart-fill.svg'\r\nimport { IStore, IUser, timeSince } from '../store'\r\nimport User from './User'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { observer } from 'mobx-react-lite'\r\nimport Input from './Input'\r\n\r\nconst Component = styled.div`\r\n  margin: 10px auto;\r\n  border: 1px solid gainsboro;\r\n  display: inline-flex;\r\n  flex-wrap: wrap;\r\n  height: 640px;\r\n  box-sizing: border-box;\r\n\r\n  @media (max-width: 640px) {\r\n    height: auto;\r\n    border-left: none;\r\n    border-right: none;\r\n  }\r\n`\r\nconst PostImg = styled.img`\r\n  height: 100%;\r\n  max-width: 678px;\r\n  width: 50vw;\r\n  object-fit: cover;\r\n\r\n  @media (max-width: 640px) {\r\n    width: 100%;\r\n    max-height: 480px;\r\n  }\r\n`\r\n\r\nconst PostBody = styled.div`\r\n  width: 320px;\r\n  height: 100%;\r\n  background-color: white;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n\r\n  @media (max-width: 640px) {\r\n    max-height: 280px;\r\n    width: 100%;\r\n    height: auto;\r\n  }\r\n`\r\nconst PostHeader = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`\r\nconst Date = styled.p`\r\n  color: grey;\r\n  font-size: 13px;\r\n  white-space: nowrap;\r\n  margin-right: 10px;\r\n`\r\n\r\nconst Actions = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  background: white;\r\n  border-top: 1px solid gainsboro;\r\n  width: 100%;\r\n  margin-top: 4px;\r\n`\r\n\r\nconst Button = styled.button<{ icon: any }>`\r\n  margin: 0 0 0 8px;\r\n  cursor: pointer;\r\n  background-image: url(${(props) => props.icon});\r\n  background-position: center;\r\n  background-repeat: no-repeat;\r\n  height: 100%;\r\n  width: 40px;\r\n`\r\n\r\nconst Comment = styled.div`\r\n  padding: 6px 12px;\r\n`\r\n\r\nconst Username = styled(NavLink)`\r\n  font-size: 14px;\r\n  font-weight: bold;\r\n  margin-right: 6px;\r\n`\r\n\r\nconst CommentText = styled.p`\r\n  font-size: 14px;\r\n  word-break: break-word;\r\n  white-space: pre-wrap;\r\n`\r\n\r\nconst CommentDate = styled.p`\r\n  color: grey;\r\n  font-size: 12px;\r\n  white-space: nowrap;\r\n  margin-left: 6px;\r\n  display: inline;\r\n`\r\n\r\nconst Comments = styled.div`\r\n  overflow: auto;\r\n  max-height: 560px;\r\n  @media (max-width: 640px) {\r\n    max-height: 160px;\r\n  }\r\n`\r\n\r\ninterface Props {\r\n  store: IStore\r\n  id: number\r\n  user: IUser\r\n  date: number\r\n  img: string\r\n  likes: number\r\n}\r\n\r\nconst Post = observer((props: Props) => {\r\n  let comments: any[] = []\r\n  props.store.users.map((user) =>\r\n    user.comments\r\n      .filter((comment) => comment.post_id === props.id)\r\n      .sort((a, b) => b.date - a.date)\r\n      .map((comment) => comments.push({ user: user, text: comment.text, date: comment.date }))\r\n  )\r\n  return (\r\n    <Component>\r\n      {props.img && <PostImg src={props.img} />}\r\n      <PostBody>\r\n        <div>\r\n          <PostHeader>\r\n            <User user={props.user} link='/social-network/user/' />\r\n            <Date>{timeSince(props.date)}</Date>\r\n          </PostHeader>\r\n          {comments && (\r\n            <Comments>\r\n              {comments\r\n                .sort((a, b) => a.date - b.date)\r\n                .map((comment) => (\r\n                  <Comment>\r\n                    <CommentText>\r\n                      <Username to={'/social-network/user/' + comment.user.id}>\r\n                        {comment.user.username}\r\n                      </Username>\r\n                      {comment.text}\r\n                      <CommentDate>{timeSince(comment.date)!.match(/^[0-9]*\\s[a-z]/)}</CommentDate>\r\n                    </CommentText>\r\n                  </Comment>\r\n                ))}\r\n            </Comments>\r\n          )}\r\n        </div>\r\n        <Actions>\r\n          <Button\r\n            onClick={() => props.store.toggleLike(props.id)}\r\n            icon={\r\n              props.store.users[props.store.currentUserId].likedPosts.includes(props.id)\r\n                ? HeartFillIcon\r\n                : HeartIcon\r\n            }\r\n          ></Button>\r\n\r\n          {props.likes > 0 && props.likes}\r\n          <Input onclick={props.store.createComment} id={props.id} placeholder={'Add a comment'} />\r\n        </Actions>\r\n      </PostBody>\r\n    </Component>\r\n  )\r\n})\r\nexport default Post\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport Post from './Post'\r\nimport { observer } from 'mobx-react-lite'\r\nimport { IStore } from '../store'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst Page = styled.div`\r\n  width: 100%;\r\n  padding: 5px 0;\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst Placeholder = styled.h1`\r\n  font-size: 18px;\r\n  margin: 10px 0;\r\n  text-align: center;\r\n`\r\n\r\nconst Link = styled(NavLink)`\r\n  color: dodgerblue;\r\n`\r\n\r\ninterface Props {\r\n  store: IStore\r\n}\r\n\r\nconst Feed = observer((props: Props) => {\r\n  document.title = 'Social network'\r\n  let posts: any[] = []\r\n  props.store.users.map(\r\n    (user) =>\r\n      props.store.users[props.store.currentUserId].following.includes(user.id) &&\r\n      user.posts.map((post) =>\r\n        posts.push({\r\n          id: post.id,\r\n          user: props.store.users[user.id],\r\n          date: post.date,\r\n          img: post.img,\r\n          likes: props.store.users.filter((user) => user.likedPosts.includes(post.id)).length\r\n        })\r\n      )\r\n  )\r\n  return (\r\n    <Page>\r\n      {props.store.users[props.store.currentUserId].following.length ? (\r\n        posts\r\n          .sort((a, b) => b.date - a.date)\r\n          .map((post) => (\r\n            <Post\r\n              id={post.id}\r\n              user={post.user}\r\n              date={post.date}\r\n              img={post.img}\r\n              likes={post.likes}\r\n              store={props.store}\r\n            />\r\n          ))\r\n      ) : (\r\n        <Placeholder>\r\n          You don't follow anyone yet, consider\r\n          <Link to='/social-network/explore'>\r\n            {' '}\r\n            searching for posts and people to follow\r\n          </Link>\r\n        </Placeholder>\r\n      )}\r\n    </Page>\r\n  )\r\n})\r\nexport default Feed\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport Post from './Post'\r\nimport { IStore } from '../store'\r\nimport { observer } from 'mobx-react-lite'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst Page = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding: 5px 0;\r\n`\r\n\r\nconst ProfileDesc = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n  max-width: 500px;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n`\r\n\r\nconst Avatar = styled.img`\r\n  height: 30vw;\r\n  width: 30vw;\r\n  max-width: 120px;\r\n  max-height: 120px;\r\n  border-radius: 50%;\r\n  object-fit: cover;\r\n  margin: 12px;\r\n`\r\n\r\nconst DescBody = styled.div`\r\n  width: 100%;\r\n  max-width: 320px;\r\n`\r\n\r\nconst Name = styled.h2`\r\n  font-size: 20px;\r\n`\r\n\r\nconst Button = styled.button`\r\n  border-radius: 4px;\r\n  border: 1px solid gainsboro;\r\n  padding: 0 12px;\r\n  height: 30px;\r\n  margin: 6px;\r\n  font-size: 14px;\r\n  cursor: pointer;\r\n`\r\n\r\nconst LinkButton = styled(NavLink)`\r\n  border-radius: 4px;\r\n  border: 1px solid gainsboro;\r\n  padding: 6px 12px;\r\n  margin: 6px;\r\n  font-size: 14px;\r\n`\r\n\r\nconst Status = styled.pre`\r\n  word-break: break-word;\r\n  white-space: pre-wrap;\r\n  margin: 6px 12px;\r\n`\r\n\r\nconst Posts = styled.div`\r\n  width: 100%;\r\n`\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  width: 100%;\r\n  height: 40px;\r\n  box-sizing: border-box;\r\n  padding: 0 12px;\r\n`\r\n\r\ninterface Props {\r\n  store: IStore\r\n  userId: number\r\n}\r\n\r\nconst Profile = observer((props: Props) => {\r\n  document.title = props.store.users[props.userId].username + ' profile'\r\n  return (\r\n    <Page>\r\n      <ProfileDesc>\r\n        <Avatar src={props.store.users[props.userId].avatar} />\r\n        <DescBody>\r\n          <Container>\r\n            <Name>{props.store.users[props.userId].username}</Name>\r\n            {props.userId !== props.store.currentUserId ? (\r\n              <div>\r\n                <LinkButton to={'/social-network/chat/' + props.userId}>Message</LinkButton>\r\n                <Button onClick={() => props.store.toggleFollow(props.userId)}>\r\n                  {props.store.users[props.store.currentUserId].following.includes(props.userId)\r\n                    ? 'Unfollow'\r\n                    : 'Follow'}\r\n                </Button>\r\n              </div>\r\n            ) : (\r\n              <Button onClick={() => props.store.setCurrentUser()}>Logout</Button>\r\n            )}\r\n          </Container>\r\n          <Status>{props.store.users[props.userId].status}</Status>\r\n          <Container>\r\n            {props.store.users[props.userId].posts.length} post\r\n            {props.store.users[props.userId].posts.length != 1 && 's'}\r\n            <NavLink to={'/social-network/user/' + props.userId + '/followers'}>\r\n              {props.store.users.filter((user) => user.following.includes(props.userId)).length}{' '}\r\n              follower\r\n              {props.store.users.filter((user) => user.following.includes(props.userId)).length !=\r\n                1 && 's'}\r\n            </NavLink>\r\n            <NavLink to={'/social-network/user/' + props.userId + '/following'}>\r\n              {props.store.users[props.userId].following.length} following\r\n            </NavLink>\r\n          </Container>\r\n        </DescBody>\r\n      </ProfileDesc>\r\n      <Posts>\r\n        {props.store.users[props.userId].posts\r\n          .slice()\r\n          .sort((a, b) => b.date - a.date)\r\n          .map((post) => (\r\n            <Post\r\n              id={post.id}\r\n              user={props.store.users[props.userId]}\r\n              date={post.date}\r\n              img={post.img}\r\n              likes={props.store.users.filter((user) => user.likedPosts.includes(post.id)).length}\r\n              store={props.store}\r\n            />\r\n          ))}\r\n      </Posts>\r\n    </Page>\r\n  )\r\n})\r\nexport default Profile\r\n","import { observer } from 'mobx-react-lite'\r\nimport React from 'react'\r\nimport styled from 'styled-components'\r\nimport { IStore } from '../store'\r\nimport User from './User'\r\n\r\nconst Page = styled.div`\r\n  width: 100%;\r\n  margin: 0 auto;\r\n  padding: 5px 0;\r\n  grid-area: 'chats';\r\n  @media (min-width: 640px) {\r\n    width: 320px;\r\n    border-left: 1px solid gainsboro;\r\n  }\r\n`\r\n\r\ninterface Props {\r\n  store: IStore\r\n}\r\n\r\nconst Chats = observer((props: Props) => {\r\n  let chats: any[] = []\r\n  props.store.users.filter(\r\n    (user) =>\r\n      user.id !== props.store.currentUserId &&\r\n      user.messages.filter(\r\n        (message) => message.recipient_id === props.store.currentUserId && chats.push(user)\r\n      )\r\n  )\r\n  props.store.users[props.store.currentUserId].messages.map((message) =>\r\n    chats.push(props.store.users[message.recipient_id])\r\n  )\r\n  document.title = 'Chats'\r\n  return (\r\n    <Page>\r\n      {chats\r\n        .filter((item, pos) => chats.indexOf(item) === pos)\r\n        .map((user) => (\r\n          <User user={user} link='/social-network/chat/' />\r\n        ))}\r\n    </Page>\r\n  )\r\n})\r\nexport default Chats\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport Input from './Input'\r\nimport { IStore, timeSince } from '../store'\r\nimport { observer } from 'mobx-react-lite'\r\nimport User from './User'\r\n\r\nconst Page = styled.div<{ height: string }>`\r\n  height: ${(props) => props.height};\r\n  width: 100%;\r\n  grid-area: 'chat';\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  box-sizing: border-box;\r\n  border-left: 1px solid gainsboro;\r\n  border-right: 1px solid gainsboro;\r\n`\r\n\r\nconst Header = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-bottom: 1px solid gainsboro;\r\n`\r\n\r\nconst Messages = styled.div`\r\n  max-width: 680px;\r\n  min-width: 320px;\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column-reverse;\r\n  overflow: auto;\r\n`\r\n\r\nconst MessageBubble = styled.div`\r\n  border: 1px solid gainsboro;\r\n  border-radius: 15px;\r\n  max-width: 320px;\r\n  padding: 10px 14px;\r\n  margin: 2px 12px;\r\n  word-break: break-word;\r\n  white-space: pre-wrap;\r\n`\r\n\r\nconst Message = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`\r\n\r\nconst Date = styled.p`\r\n  color: grey;\r\n  font-size: 13px;\r\n  white-space: nowrap;\r\n  margin: 15px;\r\n`\r\n\r\nconst InputContainer = styled.div`\r\n  width: 100%;\r\n  max-width: 680px;\r\n  border-top: 1px solid gainsboro;\r\n`\r\n\r\nconst Placeholder = styled.h2`\r\n  height: 50px;\r\n  width: 100%;\r\n  margin: auto 0;\r\n  text-align: center;\r\n`\r\n\r\ninterface Props {\r\n  store: IStore\r\n  userId: number\r\n}\r\n\r\nconst Chat = observer((props: Props) => {\r\n  props.userId >= 0\r\n    ? (document.title = 'Chat with ' + props.store.users[props.userId].username)\r\n    : (document.title = 'Chats')\r\n\r\n  function getMessages() {\r\n    let messages: any[] = []\r\n    props.userId >= 0 &&\r\n      props.store.users[props.store.currentUserId].messages.map(\r\n        (message) => message.recipient_id === props.userId && messages.push(message)\r\n      ) &&\r\n      props.store.users[props.userId].messages.map(\r\n        (message) => message.recipient_id === props.store.currentUserId && messages.push(message)\r\n      )\r\n    return messages\r\n  }\r\n  return (\r\n    <Page height={window.innerHeight - 52 + 'px'}>\r\n      {props.userId >= 0 && (\r\n        <Header>\r\n          <User user={props.store.users[props.userId]} link='/social-network/user/' />\r\n        </Header>\r\n      )}\r\n      <Messages>\r\n        {props.userId >= 0 ? (\r\n          getMessages()\r\n            .sort((a, b) => b.date - a.date)\r\n            .map((message) =>\r\n              message.recipient_id !== props.store.currentUserId ? (\r\n                <Message>\r\n                  <Date>{timeSince(message.date)}</Date>\r\n                  <MessageBubble>{message.text}</MessageBubble>\r\n                </Message>\r\n              ) : (\r\n                <Message>\r\n                  <MessageBubble>{message.text}</MessageBubble>\r\n                  <Date>{timeSince(message.date)}</Date>\r\n                </Message>\r\n              )\r\n            )\r\n        ) : (\r\n          <Placeholder>Select chat</Placeholder>\r\n        )}\r\n      </Messages>\r\n      {props.userId >= 0 && (\r\n        <InputContainer>\r\n          <Input\r\n            onclick={props.store.createMessage}\r\n            id={props.userId}\r\n            placeholder={'Add a message'}\r\n          />\r\n        </InputContainer>\r\n      )}\r\n    </Page>\r\n  )\r\n})\r\nexport default Chat\r\n","export default __webpack_public_path__ + \"static/media/close.002509ae.svg\";","import React from 'react'\r\nimport { IStore } from '../store'\r\nimport User from './User'\r\nimport Post from './Post'\r\nimport styled from 'styled-components'\r\nimport { observer } from 'mobx-react-lite'\r\nimport CloseIcon from '../resources/close.svg'\r\n\r\nconst Page = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding-top: 6px;\r\n  position: relative;\r\n`\r\n\r\nconst Searchbar = styled.div`\r\n  width: 300px;\r\n  height: 36px;\r\n  margin: 8px auto;\r\n  border: 1px solid gainsboro;\r\n  border-radius: 4px;\r\n  display: flex;\r\n  align-items: center;\r\n`\r\n\r\nconst Input = styled.input`\r\n  width: calc(100% - 30px);\r\n  height: 100%;\r\n  font-size: 15px;\r\n  margin-left: 10px;\r\n`\r\n\r\nconst Button = styled.button`\r\n  background-image: url(${CloseIcon});\r\n  background-repeat: no-repeat;\r\n  background-position: center;\r\n  height: 22px;\r\n  width: 22px;\r\n  justify-self: end;\r\n  margin-right: 10px;\r\n`\r\n\r\nconst Overlay = styled.div`\r\n  width: 300px;\r\n  margin: 0 auto;\r\n  max-height: 500px;\r\n  overflow-x: auto;\r\n  background-color: white;\r\n  border: 1px solid gainsboro;\r\n  position: absolute;\r\n  top: 50px;\r\n`\r\n\r\nconst Posts = styled.div`\r\n  width: 100%;\r\n`\r\n\r\ninterface Props {\r\n  store: IStore\r\n}\r\n\r\nconst Explore = observer((props: Props) => {\r\n  document.title = 'Search and explore'\r\n  return (\r\n    <Page>\r\n      <Searchbar>\r\n        <Input\r\n          type='search'\r\n          placeholder='Search'\r\n          value={props.store.searchBy}\r\n          onChange={(e) => props.store.setSearch(e.target.value.toLowerCase())}\r\n        />\r\n        {props.store.searchBy && <Button onClick={() => props.store.setSearch('')}></Button>}\r\n      </Searchbar>\r\n      {props.store.searchBy && (\r\n        <Overlay>\r\n          {props.store.users\r\n            .filter((user) => user.username.includes(props.store.searchBy))\r\n            .map((user) => (\r\n              <User user={user} link='/social-network/user/' />\r\n            ))}\r\n        </Overlay>\r\n      )}\r\n      <Posts>\r\n        {props.store.users.map((user) =>\r\n          user.posts.map((post) => (\r\n            <Post\r\n              id={post.id}\r\n              user={props.store.users[user.id]}\r\n              date={post.date}\r\n              img={post.img}\r\n              likes={props.store.users.filter((user) => user.likedPosts.includes(post.id)).length}\r\n              store={props.store}\r\n            />\r\n          ))\r\n        )}\r\n      </Posts>\r\n    </Page>\r\n  )\r\n})\r\nexport default Explore\r\n","export default __webpack_public_path__ + \"static/media/profile.93d9f700.svg\";","export default __webpack_public_path__ + \"static/media/home.799802eb.svg\";","export default __webpack_public_path__ + \"static/media/message.7b1bbd1c.svg\";","export default __webpack_public_path__ + \"static/media/search.a0e0f0d9.svg\";","export default __webpack_public_path__ + \"static/media/plus.25b758c5.svg\";","import React, { useState } from 'react'\r\nimport { NavLink, useHistory } from 'react-router-dom'\r\nimport ProfileIcon from '../resources/profile.svg'\r\nimport HomeIcon from '../resources/home.svg'\r\nimport MessengerIcon from '../resources/message.svg'\r\nimport SearchIcon from '../resources/search.svg'\r\nimport PlusIcon from '../resources/plus.svg'\r\nimport HeartIcon from '../resources/heart.svg'\r\nimport styled from 'styled-components'\r\nimport Input from './Input'\r\nimport { IStore } from '../store'\r\nimport { observer } from 'mobx-react-lite'\r\n\r\nconst AppHeader = styled.header`\r\n  height: 50px;\r\n  width: 100%;\r\n  margin: 0 auto;\r\n  position: sticky;\r\n  top: 0;\r\n  z-index: 10;\r\n  background: white;\r\n  border-bottom: 1px solid gainsboro;\r\n  @media (max-width: 639px) {\r\n    border-top: 1px solid gainsboro;\r\n    position: fixed;\r\n    margin-top: auto;\r\n    bottom: 0;\r\n  }\r\n`\r\n\r\nconst HeaderContainer = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  max-width: 1000px;\r\n  align-items: center;\r\n  height: 100%;\r\n  justify-content: space-between;\r\n  margin: 0 auto;\r\n\r\n  @media (max-width: 639px) {\r\n    display: flex;\r\n    justify-content: space-evenly;\r\n  }\r\n`\r\n\r\nconst HeaderLogo = styled(NavLink)`\r\n  height: 100%;\r\n  color: black;\r\n  text-decoration: none;\r\n  font-weight: bold;\r\n  font-size: 22px;\r\n  display: flex;\r\n  margin-left: 12px;\r\n  align-items: center;\r\n  font-family: 'Lobster Two';\r\n\r\n  @media (max-width: 639px) {\r\n    display: none;\r\n  }\r\n`\r\n\r\nconst Nav = styled.nav`\r\n  height: 100%;\r\n  display: flex;\r\n`\r\n\r\nconst Link = styled(NavLink)<{ $active: boolean }>`\r\n  border-bottom: ${(props) => props.$active && '2px solid black'};\r\n  padding: 13px;\r\n`\r\n\r\nconst Button = styled.button<{ $active: boolean }>`\r\n  border-bottom: ${(props) => props.$active && '2px solid black'};\r\n  padding: 13px;\r\n`\r\n\r\nconst Overlay = styled.div`\r\n  position: fixed;\r\n  top: 50px;\r\n  width: 300px;\r\n  margin: 0 auto;\r\n  overflow-x: auto;\r\n  background-color: white;\r\n  border: 1px solid gainsboro;\r\n`\r\n\r\ninterface Props {\r\n  store: IStore\r\n}\r\n\r\nconst Header = observer((props: Props) => {\r\n  let [url, setUrl] = useState(window.location.pathname)\r\n  let [overlay, setOverlay] = useState(false)\r\n\r\n  useHistory().listen((location) => {\r\n    setUrl(location.pathname)\r\n  })\r\n\r\n  return (\r\n    <AppHeader>\r\n      <HeaderContainer>\r\n        <HeaderLogo to='/social-network'>social network</HeaderLogo>\r\n        <Nav>\r\n          <Link to='/social-network' $active={url === '/social-network'}>\r\n            <img src={HomeIcon} alt='' />\r\n          </Link>\r\n          <Link to='/social-network/explore' $active={url.includes('/explore')}>\r\n            <img src={SearchIcon} alt='' />\r\n          </Link>\r\n          <Button $active={overlay} onClick={() => setOverlay(!overlay)}>\r\n            <img src={PlusIcon} alt='' />\r\n          </Button>\r\n          {overlay && (\r\n            <Overlay>\r\n              <Input onclick={props.store.createPost} placeholder={'Enter link to image'} />\r\n            </Overlay>\r\n          )}\r\n          <Link to='/social-network/chats' $active={url.includes('/chat')}>\r\n            <img src={MessengerIcon} alt='' />\r\n          </Link>\r\n          <Link to='/social-network/liked' $active={url.includes('/liked')}>\r\n            <img src={HeartIcon} alt='' />\r\n          </Link>\r\n          <Link\r\n            to={'/social-network/user/' + props.store.currentUserId}\r\n            $active={url.includes('/user')}\r\n          >\r\n            <img src={ProfileIcon} alt='' />\r\n          </Link>\r\n        </Nav>\r\n      </HeaderContainer>\r\n    </AppHeader>\r\n  )\r\n})\r\nexport default Header\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { IStore } from '../store'\r\nimport User from './User'\r\n\r\ninterface Props {\r\n  store: IStore\r\n  userId: number\r\n}\r\n\r\nconst Page = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: 24px auto;\r\n  align-items: center;\r\n`\r\n\r\nconst Heading = styled.h1`\r\n  font-size: 18px;\r\n  margin: 10px 0;\r\n  text-align: center;\r\n`\r\n\r\nexport default function Followers(props: Props) {\r\n  document.title = props.store.users[props.userId].username + \"'s followers\"\r\n  return (\r\n    <Page>\r\n      <Heading>\r\n        {props.store.users.filter((user) => user.following.includes(props.userId)).length > 0\r\n          ? props.store.users[props.userId].username + \"'s followers\"\r\n          : props.store.users[props.userId].username + ' has no followers'}\r\n      </Heading>\r\n      {props.store.users\r\n        .filter((user) => user.following.includes(props.userId))\r\n        .map((user) => (\r\n          <User user={user} link='/social-network/user/' />\r\n        ))}\r\n    </Page>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { IStore } from '../store'\r\nimport User from './User'\r\n\r\ninterface Props {\r\n  store: IStore\r\n  userId: number\r\n}\r\n\r\nconst Page = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: 24px auto;\r\n  align-items: center;\r\n`\r\n\r\nconst Heading = styled.h1`\r\n  font-size: 18px;\r\n  margin: 10px 0;\r\n  text-align: center;\r\n`\r\n\r\nexport default function Following(props: Props) {\r\n  document.title = props.store.users[props.userId].username + ' is following'\r\n  return (\r\n    <Page>\r\n      <Heading>\r\n        {props.store.users[props.userId].following.length > 0\r\n          ? props.store.users[props.userId].username + ' is following'\r\n          : props.store.users[props.userId].username + \" doesn't follow anyone\"}\r\n      </Heading>\r\n      {props.store.users[props.userId].following.map((userId) => (\r\n        <User user={props.store.users[userId]} link='/social-network/user/' />\r\n      ))}\r\n    </Page>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport Post from './Post'\r\nimport { observer } from 'mobx-react-lite'\r\nimport { IStore } from '../store'\r\n\r\nconst Page = styled.div`\r\n  width: 100%;\r\n  padding: 5px 0;\r\n`\r\n\r\nconst Placeholder = styled.h1`\r\n  font-size: 18px;\r\n  margin: 10px 0;\r\n  text-align: center;\r\n`\r\n\r\ninterface Props {\r\n  store: IStore\r\n}\r\n\r\nconst Liked = observer((props: Props) => {\r\n  document.title = 'Liked posts'\r\n  return (\r\n    <Page>\r\n      {props.store.users[props.store.currentUserId].likedPosts.length ? (\r\n        props.store.users.map((user) =>\r\n          user.posts.map(\r\n            (post) =>\r\n              props.store.users[props.store.currentUserId].likedPosts.includes(post.id) && (\r\n                <Post\r\n                  id={post.id}\r\n                  user={user}\r\n                  date={post.date}\r\n                  img={post.img}\r\n                  likes={\r\n                    props.store.users.filter((user) => user.likedPosts.includes(post.id)).length\r\n                  }\r\n                  store={props.store}\r\n                />\r\n              )\r\n          )\r\n        )\r\n      ) : (\r\n        <Placeholder>You haven't liked any posts yet</Placeholder>\r\n      )}\r\n    </Page>\r\n  )\r\n})\r\nexport default Liked\r\n","import { observer } from 'mobx-react-lite'\r\nimport React, { MutableRefObject, useEffect, useRef, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { IStore } from '../store'\r\n\r\nconst Page = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: auto;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding-top: 10vh;\r\n`\r\n\r\nconst Heading = styled.h1`\r\n  margin: 10px 0;\r\n  font-family: 'Lobster Two';\r\n  text-align: center;\r\n`\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  align-items: center;\r\n  justify-content: center;\r\n`\r\n\r\nconst Form = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 240px;\r\n  padding: 20px;\r\n`\r\n\r\nconst Input = styled.input`\r\n  height: 36px;\r\n  border: 1px solid gainsboro;\r\n  border-radius: 4px;\r\n  font-size: 15px;\r\n  height: 36px;\r\n  min-width: 120px;\r\n  padding: 0 12px;\r\n  margin: 8px 0;\r\n`\r\n\r\nconst Button = styled.input`\r\n  height: 36px;\r\n  padding: 0 12px;\r\n`\r\n\r\nconst Note = styled.p`\r\n  padding: 20px 12px;\r\n  box-sizing: border-box;\r\n  width: 100%;\r\n  max-width: 540px;\r\n`\r\n\r\nconst Link = styled.a`\r\n  display: block;\r\n  text-transform: lowercase;\r\n  font-family: serif;\r\n  margin: 20px auto;\r\n`\r\n\r\ninterface Props {\r\n  store: IStore\r\n}\r\n\r\nconst Login = observer((props: Props) => {\r\n  const [isShown, setIsShown] = useState(false)\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setIsShown(true)\r\n    }, 1000)\r\n  })\r\n\r\n  const loginUsername = useRef() as MutableRefObject<HTMLInputElement>\r\n  const registerUsername = useRef() as MutableRefObject<HTMLInputElement>\r\n  const avatar = useRef() as MutableRefObject<HTMLInputElement>\r\n  const status = useRef() as MutableRefObject<HTMLInputElement>\r\n  document.title = 'Login or register'\r\n  return isShown ? (\r\n    <Page>\r\n      <Heading>social network</Heading>\r\n      <Container>\r\n        <Form>\r\n          <Input type='text' placeholder='Username' ref={loginUsername} />\r\n          <Input\r\n            type='submit'\r\n            value='Login'\r\n            onClick={() => {\r\n              if (loginUsername.current.value) {\r\n                if (\r\n                  props.store.users.filter((user) => user.username === loginUsername.current.value)\r\n                    .length\r\n                ) {\r\n                  props.store.setCurrentUser(loginUsername.current.value)\r\n                } else {\r\n                  alert('Incorrect username')\r\n                }\r\n              }\r\n            }}\r\n          />\r\n        </Form>\r\n        <Form>\r\n          <Input type='text' placeholder='Username' ref={registerUsername} />\r\n          <Input type='text' placeholder='Link to profile picture' ref={avatar} />\r\n          <Input type='text' placeholder='Profile status' ref={status} />\r\n          <Input\r\n            type='submit'\r\n            value='Register'\r\n            onClick={() => {\r\n              if (registerUsername.current.value) {\r\n                if (\r\n                  !props.store.users.filter(\r\n                    (user) => user.username === registerUsername.current.value\r\n                  ).length\r\n                ) {\r\n                  props.store.createUser(\r\n                    registerUsername.current.value,\r\n                    avatar.current.value,\r\n                    status.current.value\r\n                  )\r\n                  props.store.setCurrentUser(registerUsername.current.value)\r\n                } else {\r\n                  alert('User already exists')\r\n                }\r\n              }\r\n            }}\r\n          />\r\n        </Form>\r\n      </Container>\r\n      <Note>\r\n        This website is not real. Users are fictional, photos are copyright-free. All data\r\n        (messages, posts, etc.) is not sent anywhere and exist only in your browser. No password is\r\n        required, you can log in with any existing username (try <b> infret</b>) or register a new\r\n        one.\r\n      </Note>\r\n      <Link href='https://infret.github.io'>\r\n        <i>by Infret</i>\r\n      </Link>\r\n    </Page>\r\n  ) : (\r\n    <></>\r\n  )\r\n})\r\nexport default Login\r\n","export default __webpack_public_path__ + \"static/media/back.0862ef31.svg\";","import { observer } from 'mobx-react-lite'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport BackIcon from '../resources/back.svg'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nconst MobileHeader = styled.div`\r\n  background-color: white;\r\n  height: 40px;\r\n  display: flex;\r\n  align-items: center;\r\n  border-bottom: 1px solid gainsboro;\r\n  position: sticky;\r\n`\r\n\r\nconst Heading = styled.h1`\r\n  font-size: 20px;\r\n  margin: 0 auto;\r\n`\r\n\r\nconst Button = styled.button`\r\n  height: 100%;\r\n  width: 50px;\r\n  background-repeat: no-repeat;\r\n  background-position: center;\r\n  background-image: url(${BackIcon});\r\n  position: absolute;\r\n`\r\n\r\nconst Header = observer(() => {\r\n  let [url, setUrl] = useState(window.location.pathname)\r\n  let [title, setTitle] = useState(document.title)\r\n  let history = useHistory()\r\n  useEffect(() => {\r\n    setTitle(document.title)\r\n  })\r\n  history.listen((location) => {\r\n    setUrl(location.pathname)\r\n  })\r\n  return (\r\n    <MobileHeader>\r\n      {url.split('/')[url.split('/').length - 1] !== 'social-network' && (\r\n        <Button onClick={() => history.goBack()} />\r\n      )}\r\n      <Heading>{title}</Heading>\r\n    </MobileHeader>\r\n  )\r\n})\r\nexport default withRouter(Header)\r\n","import { createGlobalStyle } from 'styled-components'\r\nimport ReactDOM from 'react-dom'\r\nimport React, { useEffect, useState, useLayoutEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport Feed from './components/Feed'\r\nimport Profile from './components/Profile'\r\nimport Chats from './components/Chats'\r\nimport { BrowserRouter, Redirect, Route, useHistory } from 'react-router-dom'\r\nimport ChatPage from './components/Chat'\r\nimport Explore from './components/Explore'\r\nimport Header from './components/Header'\r\nimport store, { IStore } from './store'\r\nimport Followers from './components/Followers'\r\nimport Following from './components/Following'\r\nimport Liked from './components/Liked'\r\nimport Login from './components/Login'\r\nimport { observer } from 'mobx-react-lite'\r\nimport MobileHeader from './components/MobileHeader'\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n\t* {\r\n\t\tmargin: 0;\r\n\t\tpadding: 0;\r\n\t\tborder: none;\r\n\t\tfont-family: sans-serif;\r\n\t\tresize: none;\r\n\t\toutline: none;\r\n\t\tbackground-color: transparent;\r\n    color: black;\r\n    text-decoration: none;\r\n\t}\r\n`\r\n\r\nconst Body = styled.div`\r\n  @media (max-width: 640px) {\r\n    padding-bottom: 50px;\r\n  }\r\n`\r\n\r\nconst Main = styled.div`\r\n  max-width: 1000px;\r\n  width: 100%;\r\n  margin: 0 auto;\r\n`\r\n\r\nconst Container = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 320px 1fr;\r\n  grid-template-areas: 'chats chat';\r\n  width: 100%;\r\n\r\n  @media (max-width: 640px) {\r\n    grid-template-columns: 1fr;\r\n  }\r\n`\r\n\r\ninterface Props {\r\n  store: IStore\r\n}\r\n\r\nconst App = observer((props: Props) => {\r\n  const history = useHistory()\r\n\r\n  useEffect(() => {\r\n    async function init() {\r\n      const data = await localStorage.getItem('store')\r\n      localStorage.setItem('store', JSON.stringify(data))\r\n    }\r\n    init()\r\n  }, [props.store.currentUserId])\r\n\r\n  const [width, setWidth] = useState(window.innerWidth)\r\n  useLayoutEffect(() => {\r\n    window.addEventListener('resize', () => setWidth(window.innerWidth))\r\n    return () => window.removeEventListener('resize', () => setWidth(window.innerWidth))\r\n  }, [])\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      {props.store.currentUserId >= 0 ? (\r\n        <Body>\r\n          {width >= 640 ? <Header store={props.store} /> : <MobileHeader />}\r\n          {!window.location.pathname.includes('/social-network') && (\r\n            <Redirect to='/social-network' />\r\n          )}\r\n          <Main>\r\n            <Route\r\n              path='/social-network/explore'\r\n              component={() => <Explore store={props.store} />}\r\n            />\r\n            <Route path='/social-network' exact component={() => <Feed store={props.store} />} />\r\n            <Route\r\n              path='/social-network/chats'\r\n              render={() => (\r\n                <Container>\r\n                  <Chats store={props.store} />\r\n                  {width >= 640 && <ChatPage store={props.store} userId={-1} />}\r\n                </Container>\r\n              )}\r\n            />\r\n            <Route\r\n              exact\r\n              path='/social-network/user/:userId'\r\n              component={() => (\r\n                <Profile\r\n                  userId={parseInt(window.location.pathname.replace(/[^0-9\\.]+/g, ''))}\r\n                  store={props.store}\r\n                />\r\n              )}\r\n            />\r\n            <Route\r\n              exact\r\n              path={'/social-network/user/:userId/followers'}\r\n              component={() => (\r\n                <Followers\r\n                  userId={parseInt(window.location.pathname.replace(/[^0-9\\.]+/g, ''))}\r\n                  store={props.store}\r\n                />\r\n              )}\r\n            />\r\n            <Route\r\n              exact\r\n              path={'/social-network/user/:userId/following'}\r\n              component={() => (\r\n                <Following\r\n                  userId={parseInt(window.location.pathname.replace(/[^0-9\\.]+/g, ''))}\r\n                  store={props.store}\r\n                />\r\n              )}\r\n            />\r\n            <Route\r\n              path='/social-network/chat/:userId'\r\n              component={() => (\r\n                <Container>\r\n                  {width >= 640 && <Chats store={props.store} />}\r\n                  <ChatPage\r\n                    store={props.store}\r\n                    userId={parseInt(\r\n                      window.location.pathname.substring(\r\n                        window.location.pathname.lastIndexOf('/') + 1\r\n                      )\r\n                    )}\r\n                  />\r\n                </Container>\r\n              )}\r\n            />\r\n            <Route\r\n              exact\r\n              path='/social-network/liked'\r\n              component={() => <Liked store={props.store} />}\r\n            />\r\n            {width < 640 && <Header store={props.store} />}\r\n          </Main>\r\n        </Body>\r\n      ) : (\r\n        <Login store={props.store} />\r\n      )}\r\n    </BrowserRouter>\r\n  )\r\n})\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <GlobalStyle />\r\n    <App store={store} />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}