{"version":3,"sources":["components/Avatar.tsx","components/Username.tsx","resources/heart.svg","resources/message.svg","components/Post.tsx","components/Feed.tsx","components/Profile.tsx","components/Searchbar.tsx","components/Messenger.tsx","components/Dialog.tsx","store.ts","components/Search.tsx","resources/profile.svg","resources/home.svg","resources/search.svg","resources/logo.svg","components/Header.tsx","components/App.tsx","index.tsx"],"names":["StyledLink","styled","NavLink","StyledImg","img","Avatar","props","to","userId","src","Username","name","StyledPost","div","PostHeader","Date","p","ImgActions","ImgButton","button","PostImg","Text","pre","Post","avatar","id","date","HeartIcon","alt","MessageIcon","text","Container","Feed","document","title","getPosts","map","post","index","ProfileDescription","Name","h2","Status","Profile","data","users","username","StyledInput","input","Searchbar","type","placeholder","Page","DialogLink","LastMessage","Messenger","getDialogs","dialog","i","sender_id","PageContent","Messages","StyledMessage","Dialog","getMessages","parseInt","window","location","pathname","substring","lastIndexOf","message","initialState","currentUserId","messages","recipient_id","posts","getCurrentDate","Intl","DateTimeFormat","month","day","hour","minute","format","now","Search","AppHeader","header","HeaderLogo","StyledNav","nav","active","Header","useState","url","setUrl","useHistory","listen","LogoIcon","HomeIcon","includes","SearchIcon","MessengerIcon","ProfileIcon","AppContainer","height","App","setPost","setMessage","addPost","postText","prev","addMessage","messageText","postsToRender","forEach","item","push","companion_id","messagesToRender","dialogsToRender","innerHeight","path","exact","component","render","GlobalStyle","createGlobalStyle","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.4540f13b.chunk.js","sourcesContent":["import { NavLink } from 'react-router-dom'\nimport styled from 'styled-components'\n\nconst StyledLink = styled(NavLink)`\n  color: black;\n  text-decoration: none;\n  height: 48px;\n  width: 48px;\n  margin: 10px;\n`\n\nconst StyledImg = styled.img`\n  border-radius: 50%;\n  width: 100%;\n  height: 100%;\n`\n\ninterface propsInterface {\n  userId: number\n  src: string\n}\n\nconst Avatar = (props: propsInterface) => (\n  <StyledLink to={'/user/' + props.userId}>\n    <StyledImg src={props.src} />\n  </StyledLink>\n)\nexport default Avatar\n","import { NavLink } from 'react-router-dom'\nimport styled from 'styled-components'\n\nconst StyledLink = styled(NavLink)`\n  color: black;\n  text-decoration: none;\n  font-weight: bold;\n`\n\ninterface propsInterface {\n  userId: number\n  name: string\n}\n\nconst Username = (props: propsInterface) => (\n  <StyledLink to={'/user/' + props.userId}>{props.name}</StyledLink>\n)\nexport default Username\n","export default __webpack_public_path__ + \"static/media/heart.b0e6508e.svg\";","export default __webpack_public_path__ + \"static/media/message.e5053226.svg\";","import React from 'react'\nimport styled from 'styled-components'\nimport Avatar from './Avatar'\nimport Username from './Username'\nimport HeartIcon from '../resources/heart.svg'\nimport MessageIcon from '../resources/message.svg'\n\nconst StyledPost = styled.div`\n  margin: 12px auto;\n  border: 1px solid gainsboro;\n  border-radius: 4px;\n  min-width: 360px;\n  width: 100%;\n  max-width: 600px;\n`\n\nconst PostHeader = styled.div`\n  display: flex;\n  align-items: center;\n`\n\nconst Date = styled.p`\n  color: #999;\n  font-size: 14px;\n  margin-left: 12px;\n`\n\nconst ImgActions = styled.div`\n  display: flex;\n  align-items: center;\n`\n\nconst ImgButton = styled.button`\n  margin: 12px -4px 0 4px;\n`\n\nconst PostImg = styled.img`\n  height: 300px;\n  width: 100%;\n  object-fit: cover;\n`\n\nconst Text = styled.pre`\n  white-space: pre-wrap;\n  word-wrap: break-word;\n  margin: 6px 12px 12px 12px;\n`\n\ninterface propsInterface {\n  name: string\n  avatar: string\n  text: string\n  date: string\n  id: number\n}\n\nexport default function Post(props: propsInterface) {\n  return (\n    <StyledPost>\n      <PostHeader>\n        <Avatar src={props.avatar} userId={props.id} />\n        <Username userId={props.id} name={props.name} />\n        <Date>{props.date}</Date>\n      </PostHeader>\n      <PostImg src='https://images.unsplash.com/photo-1612367197703-1e9839b09f63?ixid=MXwxMjA3fDB8MHxlZGl0b3JpYWwtZmVlZHw5fHx8ZW58MHx8fA%3D%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60' />\n      <ImgActions>\n        <ImgButton>\n          <img src={HeartIcon} alt='' />\n        </ImgButton>\n        <ImgButton>\n          <img src={MessageIcon} alt='' />\n        </ImgButton>\n      </ImgActions>\n      <Text>{props.text}</Text>\n    </StyledPost>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport Post from './Post'\nimport { renderInterface } from '../types'\n\nconst Container = styled.div`\n  width: 100%;\n  padding: 6px 12px;\n`\n\ninterface propsInterface {\n  getPosts: (sender_id?: number) => renderInterface[]\n  addPost: (postText: string) => void\n}\n\nexport default function Feed(props: propsInterface) {\n  document.title = 'Posts'\n  return (\n    <Container>\n      {props.getPosts().map((post, index) => (\n        <Post\n          key={index}\n          id={index}\n          name={post.name}\n          avatar={post.avatar}\n          text={post.text}\n          date={post.date}\n        />\n      ))}\n    </Container>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport Post from './Post'\nimport { stateInterface, renderInterface } from '../types'\nimport Avatar from './Avatar'\n\nconst ProfileDescription = styled.div`\n  display: flex;\n`\n\nconst Name = styled.h2`\n  font-size: 18px;\n  font-weight: normal;\n`\n\nconst Status = styled.p`\n  color: #999;\n  font-size: 15px;\n  grid-area: status;\n`\n\ninterface propsInterface {\n  data: stateInterface\n  userId: number\n  getPosts: (sender_id?: number) => renderInterface[]\n}\n\nexport default function Profile(props: propsInterface) {\n  document.title = props.data.users[props.userId].username + 'profile'\n  return (\n    <>\n      <ProfileDescription>\n        <Avatar\n          src={props.data.users[props.userId].avatar}\n          userId={props.userId}\n        />\n        <Name>{props.data.users[props.userId].username}</Name>\n        <Status>Ban</Status>\n      </ProfileDescription>\n      {props.getPosts(props.userId).map((post, index) => (\n        <Post\n          id={index}\n          key={index}\n          name={post.name}\n          avatar={post.avatar}\n          text={post.text}\n          date={post.date}\n        />\n      ))}\n    </>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst StyledInput = styled.input`\n  width: 220px;\n  height: 26px;\n  padding: 4px 12px;\n  display: block;\n  font-size: 15px;\n  text-align: center;\n  margin: 8px auto;\n  border: 1px solid gainsboro;\n  border-radius: 4px;\n  :focus {\n    text-align: left;\n  }\n`\n\nexport default function Searchbar() {\n  return <StyledInput type='text' placeholder='Search' />\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport Searchbar from './Searchbar'\nimport Avatar from './Avatar'\nimport { NavLink } from 'react-router-dom'\nimport { stateInterface, renderInterface } from '../types'\nimport Dialog from './Dialog'\n\nconst Page = styled.div`\n  display: flex;\n`\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nconst DialogLink = styled(NavLink)`\n  height: 74px;\n  width: 100%;\n  text-decoration: none;\n  color: black;\n  display: grid;\n  grid-template-areas: 'avatar name date' 'avatar text text';\n  grid-template-columns: 74px 1fr 148px;\n  grid-template-rows: 37px 37px;\n`\n\nconst Name = styled.p`\n  grid-area: name;\n  align-self: start;\n`\n\nconst LastMessage = styled.p`\n  color: #999;\n  grid-area: text;\n  align-self: end;\n  font-size: 15px;\n`\n\nconst Date = styled.p`\n  color: #999;\n  grid-area: date;\n  align-self: end;\n  font-size: 14px;\n  text-align: end;\n  margin: 12px;\n`\n\ninterface propsInterface {\n  data: stateInterface\n  getDialogs: () => renderInterface[]\n}\n\nexport default function Messenger(props: propsInterface) {\n  document.title = 'Chats'\n  return (\n    <Page>\n      <Container>\n        <Searchbar />\n        {props.getDialogs().map((dialog, i) => (\n          <DialogLink key={i} to={'/dialog/' + dialog.sender_id}>\n            <Avatar src={dialog.avatar} userId={dialog.sender_id} />\n            <Name>{dialog.name}</Name>\n            <Date>{dialog.date}</Date>\n            <LastMessage>{dialog.text}</LastMessage>\n          </DialogLink>\n        ))}\n      </Container>\n    </Page>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport Avatar from './Avatar'\nimport TextareaForm from './TextareaForm'\nimport { stateInterface, renderInterface } from '../types'\n\nconst PageContent = styled.div`\n  margin-top: 6px;\n  display: flex;\n  flex-direction: column;\n`\n\nconst Messages = styled.div``\n\nconst StyledMessage = styled.div`\n  width: 100%;\n  height: auto;\n  text-decoration: none;\n  color: black;\n  display: grid;\n  grid-template-areas: 'avatar name date' 'avatar text text';\n  grid-template-columns: 74px 1fr 148px;\n  grid-template-rows: 37px 1fr;\n`\n\nconst Name = styled.p`\n  grid-area: name;\n  align-self: start;\n`\n\nconst Date = styled.p`\n  color: #999;\n  font-size: 14px;\n  grid-area: date;\n  text-align: end;\n  margin: 12px;\n`\n\nconst Text = styled.pre`\n  color: #333;\n  grid-area: text;\n  white-space: pre-wrap;\n  align-self: center;\n  padding-right: 6px;\n`\n\ninterface propsInterface {\n  data: stateInterface\n  userId: number\n  getMessages: (companion_id: number) => renderInterface[]\n  addMessage: (messageText: string) => void\n}\n\nexport default function Dialog(props: propsInterface) {\n  document.title = 'Dialog with ' + props.data.users[props.userId].username\n  return (\n    <>\n      <PageContent>\n        <Messages>\n          {props\n            .getMessages(\n              parseInt(\n                window.location.pathname.substring(\n                  window.location.pathname.lastIndexOf('/') + 1\n                )\n              )\n            )\n            .map((message, index) => (\n              <StyledMessage key={index}>\n                <Avatar src={message.avatar} userId={message.sender_id} />\n                <Name>{message.name}</Name>\n                <Text>{message.text}</Text>\n                <Date>{message.date}</Date>\n              </StyledMessage>\n            ))}\n        </Messages>\n        {/* <TextareaForm\n          icon={BlueSendIcon}\n          placeholder='Your message'\n          onclick={props.addMessage}\n        /> */}\n      </PageContent>\n    </>\n  )\n}\n","export let initialState = {\n  currentUserId: 0,\n  users: [\n    {\n\t\t\tid: 0,\n      username: 'vpech',\n      avatar:\n        'https://images.unsplash.com/photo-1503212556734-c0ca0c49c8b0?ixlib=rb-1.2.1&ixid=MXwxMjA3fDB8MHxzZWFyY2h8MjF8fHNpbGhvdWV0dGV8ZW58MHwyfDB8&auto=format&fit=crop&w=400&q=60'\n    },\n    {\n\t\t\tid: 1,\n      username: 'nnull',\n      avatar:\n        'https://images.unsplash.com/photo-1581456495146-65a71b2c8e52?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=633&q=80'\n    },\n    {\n\t\t\tid: 2,\n      username: 'sergejar',\n      avatar:\n        'https://images.unsplash.com/photo-1500389723459-ca24a5564899?ixlib=rb-1.2.1&ixid=MXwxMjA3fDB8MHxzZWFyY2h8MXx8aHVtYW4lMjBzaGFkb3d8ZW58MHx8MHw%3D&auto=format&fit=crop&w=400&q=60'\n    }\n  ],\n  messages: [\n    {\n      sender_id: 0,\n      recipient_id: 1,\n      text: 'Sup',\n      date: '11 Nov, 10:08'\n    },\n    {\n      sender_id: 1,\n      recipient_id: 0,\n      text: 'Hey',\n      date: '11 Nov, 10:47'\n    }\n  ],\n  posts: [\n    {\n      sender_id: 0,\n      text: 'Атомный бан',\n      date: '11 Nov, 17:08'\n    },\n    {\n      sender_id: 1,\n      text: 'The world is gonna roll me',\n      date: '12 Nov, 17:42'\n    }\n  ]\n}\n\nexport function getCurrentDate() {\n  return new Intl.DateTimeFormat('en-GB', {\n    month: 'short',\n    day: 'numeric',\n    hour: 'numeric',\n    minute: 'numeric'\n  }).format(Date.now())\n}\n","import React from 'react'\nimport Searchbar from './Searchbar'\nimport { stateInterface } from '../types'\n\ninterface propsInterface {\n  data: stateInterface\n}\n\nexport default function Search(props: propsInterface) {\n  document.title = 'Search people'\n  return (\n    <>\n      <Searchbar />\n    </>\n  )\n}\n","export default __webpack_public_path__ + \"static/media/profile.cce85dcf.svg\";","export default __webpack_public_path__ + \"static/media/home.12653022.svg\";","export default __webpack_public_path__ + \"static/media/search.9e893c64.svg\";","export default __webpack_public_path__ + \"static/media/logo.3a1ea0a8.svg\";","import React, { useState } from 'react'\nimport { NavLink, useHistory } from 'react-router-dom'\nimport ProfileIcon from '../resources/profile.svg'\nimport HomeIcon from '../resources/home.svg'\nimport MessengerIcon from '../resources/message.svg'\nimport SearchIcon from '../resources/search.svg'\nimport LogoIcon from '../resources/logo.svg'\nimport styled from 'styled-components'\n\nconst AppHeader = styled.header`\n  height: 50px;\n  width: 100%;\n  margin: 0 auto;\n  position: sticky;\n  top: 0;\n  display: flex;\n  justify-content: space-evenly;\n  z-index: 10;\n  background: white;\n  border-bottom: 1px solid gainsboro;\n`\n\nconst HeaderLogo = styled(NavLink)`\n  width: 200px;\n  height: 100%;\n  color: black;\n  text-decoration: none;\n  font-weight: bold;\n  font-size: 18px;\n  display: flex;\n  align-items: center;\n  justify-content: space-evenly;\n`\n\nconst StyledNav = styled.nav`\n  width: 200px;\n  height: 100%;\n  display: flex;\n`\n\nconst StyledLink = styled(NavLink)<{ active: boolean }>`\n  border-bottom: ${(props) => props.active && '2px solid black'};\n  padding: 13px;\n`\n\ninterface propsInterface {\n  currentUserId: number\n}\n\nconst Header = (props: propsInterface) => {\n  let [url, setUrl] = useState(window.location.pathname)\n\n  useHistory().listen((location) => {\n    setUrl(location.pathname)\n  })\n\n  return (\n    <AppHeader>\n      <HeaderLogo to='/'>\n        <img src={LogoIcon} alt='' />\n        Social network\n      </HeaderLogo>\n      <StyledNav>\n        <StyledLink to='/' active={url === '/'}>\n          <img src={HomeIcon} alt='' />\n        </StyledLink>\n        <StyledLink to='/search' active={url.includes('/search')}>\n          <img src={SearchIcon} alt='' />\n        </StyledLink>\n        <StyledLink to='/messenger' active={url.includes('/messenger')}>\n          <img src={MessengerIcon} alt='' />\n        </StyledLink>\n        <StyledLink to={'/user/' + props.currentUserId} active={url.includes('/user')}>\n          <img src={ProfileIcon} alt='' />\n        </StyledLink>\n      </StyledNav>\n    </AppHeader>\n  )\n}\nexport default Header\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport Feed from './Feed'\nimport Profile from './Profile'\nimport Messenger from './Messenger'\nimport { BrowserRouter, Route } from 'react-router-dom'\nimport Dialog from './Dialog'\nimport { initialState, getCurrentDate } from '../store'\nimport { renderInterface } from '../types'\nimport Search from './Search'\nimport Header from './Header'\n\nconst AppContainer = styled.div<{ height: string }>`\n  max-width: 800px;\n  width: 100%;\n  height: ${(props) => props.height};\n  margin: 0 auto;\n  display: flex;\n`\n\nconst Container = styled.div`\n  display: flex;\n`\n\nexport default function App() {\n  const [posts, setPost] = useState(initialState.posts)\n  const [messages, setMessage] = useState(initialState.messages)\n\n  function addPost(postText: string) {\n    if (postText) {\n      setPost((prev) => [\n        ...prev,\n        {\n          sender_id: initialState.currentUserId,\n          text: postText,\n          date: getCurrentDate()\n        }\n      ])\n    }\n  }\n\n  function addMessage(messageText: string) {\n    if (messageText) {\n      setMessage((prev) => [\n        ...prev,\n        {\n          sender_id: initialState.currentUserId,\n          recipient_id: 1,\n          text: messageText,\n          date: getCurrentDate()\n        }\n      ])\n    }\n  }\n\n  function getPosts(sender_id: number = -1) {\n    let postsToRender: renderInterface[] = []\n    posts.forEach((item, i) => {\n      if (sender_id === -1) {\n        postsToRender.push({\n          sender_id: posts[i].sender_id,\n          name: initialState.users[posts[i].sender_id].username,\n          avatar: initialState.users[posts[i].sender_id].avatar,\n          text: posts[i].text,\n          date: posts[i].date\n        })\n      } else {\n        if (posts[i].sender_id === sender_id) {\n          postsToRender.push({\n            sender_id: posts[i].sender_id,\n            name: initialState.users[sender_id].username,\n            avatar: initialState.users[sender_id].avatar,\n            text: posts[i].text,\n            date: posts[i].date\n          })\n        }\n      }\n    })\n    return postsToRender\n  }\n\n  function getMessages(companion_id: number) {\n    let messagesToRender: renderInterface[] = []\n    messages.forEach((item, i) => {\n      if (\n        (messages[i].sender_id === companion_id &&\n          messages[i].recipient_id === initialState.currentUserId) ||\n        (messages[i].sender_id === initialState.currentUserId &&\n          messages[i].recipient_id === companion_id)\n      ) {\n        messagesToRender.push({\n          sender_id: messages[i].sender_id,\n          name: initialState.users[messages[i].sender_id].username,\n          avatar: initialState.users[messages[i].sender_id].avatar,\n          text: messages[i].text,\n          date: messages[i].date\n        })\n      }\n    })\n    return messagesToRender\n  }\n\n  function getDialogs() {\n    let dialogsToRender: renderInterface[] = []\n    messages.forEach((item, i) => {\n      if (messages[i].recipient_id === initialState.currentUserId) {\n        dialogsToRender.push({\n          sender_id: messages[i].sender_id,\n          name: initialState.users[messages[i].sender_id].username,\n          avatar: initialState.users[messages[i].sender_id].avatar,\n          text: messages[i].text,\n          date: messages[i].date\n        })\n      }\n    })\n    return dialogsToRender\n  }\n\n  return (\n    <BrowserRouter>\n      <Header currentUserId={initialState.currentUserId} />\n      <AppContainer height={window.innerHeight + 'px'}>\n        <Route\n          path='/'\n          exact\n          component={() => <Feed getPosts={getPosts} addPost={addPost} />}\n        />\n        <Route\n          path='/search'\n          component={() => <Search data={initialState} />}\n        />\n        <Route\n          path='/messenger'\n          render={() => (\n            <Container>\n              <Messenger data={initialState} getDialogs={getDialogs} />\n              <Dialog\n                data={initialState}\n                userId={0}\n                getMessages={getMessages}\n                addMessage={addMessage}\n              />\n            </Container>\n          )}\n        />\n        <Route\n          path='/user/'\n          component={() => (\n            <Profile\n              data={initialState}\n              userId={parseInt(\n                window.location.pathname.substring(\n                  window.location.pathname.lastIndexOf('/') + 1\n                )\n              )}\n              getPosts={getPosts}\n            />\n          )}\n        />\n        <Route\n          path='/dialog/'\n          component={() => (\n            <Dialog\n              data={initialState}\n              userId={parseInt(\n                window.location.pathname.substring(\n                  window.location.pathname.lastIndexOf('/') + 1\n                )\n              )}\n              getMessages={getMessages}\n              addMessage={addMessage}\n            />\n          )}\n        />\n      </AppContainer>\n    </BrowserRouter>\n  )\n}\n","import { createGlobalStyle } from 'styled-components'\nimport * as React from 'react'\nimport * as ReactDOM from 'react-dom'\nimport App from './components/App'\n\nconst GlobalStyle = createGlobalStyle`\n\tbody {\n\t\tmargin: 0;\n\t\tfont-family: sans-serif;\n\t\t-webkit-font-smoothing: antialiased;\n\t\t-moz-osx-font-smoothing: grayscale;\n\t}\n\n\t:focus {\n\t\toutline: none;\n\t}\n\n\tbutton {\n\t\tbackground-color: transparent;\n\t\tborder: none;\n\t\tpadding: none;\n\t}\n\n\ttextarea, pre {\n\t\tresize: none;\n\t\toverflow: auto;\n\t\tfont-family: sans-serif;\n\t\tfont-style: normal;\n\t}\n`\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n    <GlobalStyle />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}