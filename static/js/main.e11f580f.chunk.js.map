{"version":3,"sources":["components/Avatar.tsx","components/Username.tsx","resources/heart.svg","resources/message.svg","components/Post.tsx","mobx-store.ts","components/Feed.tsx","components/Profile.tsx","components/Searchbar.tsx","components/Messenger.tsx","components/Dialog.tsx","store.ts","components/Search.tsx","resources/profile.svg","resources/home.svg","resources/search.svg","resources/logo.svg","components/Header.tsx","components/App.tsx","index.tsx"],"names":["StyledLink","styled","NavLink","StyledImg","img","Avatar","props","to","userId","src","Username","name","StyledPost","div","PostHeader","Date","p","ImgActions","ImgButton","button","PostImg","Text","pre","Post","avatar","id","date","HeartIcon","alt","MessageIcon","text","types","model","sender_id","number","string","store","posts","map","actions","self","createPost","set","Math","floor","random","toString","create","console","log","getSnapshot","Container","Feed","observer","onClick","Object","values","post","index","ProfileDescription","Name","h2","Status","Profile","document","title","data","users","username","getPosts","StyledInput","input","Searchbar","type","placeholder","Page","DialogLink","LastMessage","Messenger","getDialogs","dialog","i","PageContent","Messages","StyledMessage","Dialog","getMessages","parseInt","window","location","pathname","substring","lastIndexOf","message","initialState","currentUserId","messages","recipient_id","getCurrentDate","Intl","DateTimeFormat","month","day","hour","minute","format","now","Search","AppHeader","header","HeaderLogo","StyledNav","nav","active","Header","useState","url","setUrl","useHistory","listen","LogoIcon","HomeIcon","includes","SearchIcon","MessengerIcon","ProfileIcon","AppContainer","height","App","setPost","setMessage","addPost","postText","prev","addMessage","messageText","postsToRender","forEach","item","push","companion_id","messagesToRender","dialogsToRender","innerHeight","path","exact","component","render","GlobalStyle","createGlobalStyle","ReactDOM","getElementById"],"mappings":"6cAGA,IAAMA,EAAaC,YAAOC,IAAPD,CAAH,KAQVE,EAAYF,IAAOG,IAAV,KAgBAC,EALA,SAACC,GAAD,OACb,cAACN,EAAD,CAAYO,GAAI,SAAWD,EAAME,OAAjC,SACE,cAACL,EAAD,CAAWM,IAAKH,EAAMG,S,wICrB1B,IAAMT,EAAaC,YAAOC,IAAPD,CAAH,KAcDS,EAHE,SAACJ,GAAD,OACf,cAAC,EAAD,CAAYC,GAAI,SAAWD,EAAME,OAAjC,SAA0CF,EAAMK,QCfnC,MAA0B,kCCA1B,MAA0B,oC,66BCOzC,IAAMC,EAAaX,IAAOY,IAAV,KASVC,EAAab,IAAOY,IAAV,KAKVE,EAAOd,IAAOe,EAAV,KAMJC,EAAahB,IAAOY,IAAV,KAKVK,EAAYjB,IAAOkB,OAAV,KAITC,EAAUnB,IAAOG,IAAV,KAMPiB,EAAOpB,IAAOqB,IAAV,KAcK,SAASC,EAAKjB,GAC3B,OACE,eAACM,EAAD,WACE,eAACE,EAAD,WACE,cAAC,EAAD,CAAQL,IAAKH,EAAMkB,OAAQhB,OAAQF,EAAMmB,KACzC,cAAC,EAAD,CAAUjB,OAAQF,EAAMmB,GAAId,KAAML,EAAMK,OACxC,cAAC,EAAD,UAAOL,EAAMoB,UAEf,cAACN,EAAD,CAASX,IAAI,8KACb,eAACQ,EAAD,WACE,cAACC,EAAD,UACE,qBAAKT,IAAKkB,EAAWC,IAAI,OAE3B,cAACV,EAAD,UACE,qBAAKT,IAAKoB,EAAaD,IAAI,UAG/B,cAACP,EAAD,UAAOf,EAAMwB,U,oBCvEbP,EAAOQ,IAAMC,MAAM,CACvBC,UAAWF,IAAMG,OACjBJ,KAAMC,IAAMI,OACZT,KAAMK,IAAMI,SAiBRC,EAdQL,IACXC,MAAM,CACLK,MAAON,IAAMO,IAAIf,KAElBgB,SAAQ,SAACC,GAAD,MAAW,CAClBC,WADkB,SACPR,EAAmBH,EAAcJ,GAC1Cc,EAAKH,MAAMK,IACTC,KAAKC,MAAsB,IAAhBD,KAAKE,UAAgBC,WAChCvB,EAAKwB,OAAO,CAAEd,YAAWH,OAAMJ,UAEjCsB,QAAQC,IAAIC,YAAYd,SAIVW,OAAO,CACzBV,MAAO,KAMMD,I,6GCrBf,IAAMe,EAAYlD,IAAOY,IAAV,KAyBAuC,EAfFC,aAAS,SAAC/C,GAAD,OACpB,eAAC6C,EAAD,WACE,wBAAQG,QAAS,kBAAMlB,EAAMK,WAAW,EAAG,MAAO,YAAlD,sBACCc,OAAOC,OAAON,YAAYd,GAAOC,OAAOC,KAAI,SAACmB,EAAMC,GAAP,OAC3C,cAACnC,EAAD,CAEEE,GAAIiC,EACJ/C,KAAM,QACNa,OAAQ,IACRM,KAAM2B,EAAK3B,KACXJ,KAAM+B,EAAK/B,MALNgC,Y,6UCjBb,IAAMC,EAAqB1D,IAAOY,IAAV,KAIlB+C,EAAO3D,IAAO4D,GAAV,KAKJC,EAAS7D,IAAOe,EAAV,KAYG,SAAS+C,EAAQzD,GAE9B,OADA0D,SAASC,MAAQ3D,EAAM4D,KAAKC,MAAM7D,EAAME,QAAQ4D,SAAW,UAEzD,qCACE,eAACT,EAAD,WACE,cAAC,EAAD,CACElD,IAAKH,EAAM4D,KAAKC,MAAM7D,EAAME,QAAQgB,OACpChB,OAAQF,EAAME,SAEhB,cAACoD,EAAD,UAAOtD,EAAM4D,KAAKC,MAAM7D,EAAME,QAAQ4D,WACtC,cAACN,EAAD,qBAEDxD,EAAM+D,SAAS/D,EAAME,QAAQ8B,KAAI,SAACmB,EAAMC,GAAP,OAChC,cAACnC,EAAD,CACEE,GAAIiC,EAEJ/C,KAAM8C,EAAK9C,KACXa,OAAQiC,EAAKjC,OACbM,KAAM2B,EAAK3B,KACXJ,KAAM+B,EAAK/B,MAJNgC,S,iTCvCf,IAAMY,EAAcrE,IAAOsE,MAAV,KAeF,SAASC,IACtB,OAAO,cAACF,EAAD,CAAaG,KAAK,OAAOC,YAAY,W,q8BCX9C,IAAMC,GAAO1E,IAAOY,IAAV,MAIJsC,GAAYlD,IAAOY,IAAV,MAKT+D,GAAa3E,YAAOC,IAAPD,CAAH,MAWV2D,GAAO3D,IAAOe,EAAV,MAKJ6D,GAAc5E,IAAOe,EAAV,MAOXD,GAAOd,IAAOe,EAAV,MAcK,SAAS8D,GAAUxE,GAEhC,OADA0D,SAASC,MAAQ,QAEf,cAACU,GAAD,UACE,eAAC,GAAD,WACE,cAACH,EAAD,IACClE,EAAMyE,aAAazC,KAAI,SAAC0C,EAAQC,GAAT,OACtB,eAACL,GAAD,CAAoBrE,GAAI,WAAayE,EAAO/C,UAA5C,UACE,cAAC,EAAD,CAAQxB,IAAKuE,EAAOxD,OAAQhB,OAAQwE,EAAO/C,YAC3C,cAAC,GAAD,UAAO+C,EAAOrE,OACd,cAAC,GAAD,UAAOqE,EAAOtD,OACd,cAACmD,GAAD,UAAcG,EAAOlD,SAJNmD,W,49BCvD3B,IAAMC,GAAcjF,IAAOY,IAAV,MAMXsE,GAAWlF,IAAOY,IAAV,MAERuE,GAAgBnF,IAAOY,IAAV,MAWb+C,GAAO3D,IAAOe,EAAV,MAKJD,GAAOd,IAAOe,EAAV,MAQJK,GAAOpB,IAAOqB,IAAV,MAeK,SAAS+D,GAAO/E,GAE7B,OADA0D,SAASC,MAAQ,eAAiB3D,EAAM4D,KAAKC,MAAM7D,EAAME,QAAQ4D,SAE/D,mCACE,cAACc,GAAD,UACE,cAACC,GAAD,UACG7E,EACEgF,YACCC,SACEC,OAAOC,SAASC,SAASC,UACvBH,OAAOC,SAASC,SAASE,YAAY,KAAO,KAIjDtD,KAAI,SAACuD,EAASnC,GAAV,OACH,eAAC0B,GAAD,WACE,cAAC,EAAD,CAAQ3E,IAAKoF,EAAQrE,OAAQhB,OAAQqF,EAAQ5D,YAC7C,cAAC,GAAD,UAAO4D,EAAQlF,OACf,cAAC,GAAD,UAAOkF,EAAQ/D,OACf,cAAC,GAAD,UAAO+D,EAAQnE,SAJGgC,YCpE3B,IAAIoC,GAAe,CACxBC,cAAe,EACf5B,MAAO,CACL,CACE1C,GAAI,EACJ2C,SAAU,QACV5C,OACE,6KAEJ,CACEC,GAAI,EACJ2C,SAAU,QACV5C,OACE,yIAEJ,CACEC,GAAI,EACJ2C,SAAU,WACV5C,OACE,oLAGNwE,SAAU,CACR,CACE/D,UAAW,EACXgE,aAAc,EACdnE,KAAM,MACNJ,KAAM,iBAER,CACEO,UAAW,EACXgE,aAAc,EACdnE,KAAM,MACNJ,KAAM,kBAGVW,MAAO,CACL,CACEJ,UAAW,EACXH,KAAM,sBACNJ,KAAM,iBAER,CACEO,UAAW,EACXH,KAAM,sBACNJ,KAAM,mBAKL,SAASwE,KACd,OAAO,IAAIC,KAAKC,eAAe,QAAS,CACtCC,MAAO,QACPC,IAAK,UACLC,KAAM,UACNC,OAAQ,YACPC,OAAO1F,KAAK2F,OChDF,SAASC,GAAOrG,GAE7B,OADA0D,SAASC,MAAQ,gBAEf,mCACE,cAACO,EAAD,MCZS,WAA0B,oCCA1B,OAA0B,iCCA1B,OAA0B,mCCA1B,OAA0B,iC,yxBCSzC,IAAMoC,GAAY3G,IAAO4G,OAAV,MAaTC,GAAa7G,YAAOC,IAAPD,CAAH,MAYV8G,GAAY9G,IAAO+G,IAAV,MAMThH,GAAaC,YAAOC,IAAPD,CAAH,MACG,SAACK,GAAD,OAAWA,EAAM2G,QAAU,qBAsC/BC,GA9BA,SAAC5G,GAA2B,IAAD,EACpB6G,mBAAS3B,OAAOC,SAASC,UADL,mBACnC0B,EADmC,KAC9BC,EAD8B,KAOxC,OAJAC,eAAaC,QAAO,SAAC9B,GACnB4B,EAAO5B,EAASC,aAIhB,eAACkB,GAAD,WACE,eAACE,GAAD,CAAYvG,GAAG,IAAf,UACE,qBAAKE,IAAK+G,GAAU5F,IAAI,KAD1B,oBAIA,eAACmF,GAAD,WACE,cAAC,GAAD,CAAYxG,GAAG,IAAI0G,OAAgB,MAARG,EAA3B,SACE,qBAAK3G,IAAKgH,GAAU7F,IAAI,OAE1B,cAAC,GAAD,CAAYrB,GAAG,UAAU0G,OAAQG,EAAIM,SAAS,WAA9C,SACE,qBAAKjH,IAAKkH,GAAY/F,IAAI,OAE5B,cAAC,GAAD,CAAYrB,GAAG,aAAa0G,OAAQG,EAAIM,SAAS,cAAjD,SACE,qBAAKjH,IAAKmH,EAAehG,IAAI,OAE/B,cAAC,GAAD,CAAYrB,GAAI,SAAWD,EAAMyF,cAAekB,OAAQG,EAAIM,SAAS,SAArE,SACE,qBAAKjH,IAAKoH,GAAajG,IAAI,c,8PC7DrC,IAAMkG,GAAe7H,IAAOY,IAAV,MAGN,SAACP,GAAD,OAAWA,EAAMyH,UAKvB5E,GAAYlD,IAAOY,IAAV,MAIA,SAASmH,KAAO,IAAD,EACHb,mBAASrB,GAAazD,OADnB,mBACrBA,EADqB,KACd4F,EADc,OAEGd,mBAASrB,GAAaE,UAFzB,mBAErBA,EAFqB,KAEXkC,EAFW,KAI5B,SAASC,EAAQC,GACXA,GACFH,GAAQ,SAACI,GAAD,4BACHA,GADG,CAEN,CACEpG,UAAW6D,GAAaC,cACxBjE,KAAMsG,EACN1G,KAAMwE,WAMd,SAASoC,EAAWC,GACdA,GACFL,GAAW,SAACG,GAAD,4BACNA,GADM,CAET,CACEpG,UAAW6D,GAAaC,cACxBE,aAAc,EACdnE,KAAMyG,EACN7G,KAAMwE,WAMd,SAAS7B,IAAkC,IAAzBpC,EAAwB,wDAAH,EACjCuG,EAAmC,GAsBvC,OArBAnG,EAAMoG,SAAQ,SAACC,EAAMzD,IACA,IAAfhD,EACFuG,EAAcG,KAAK,CACjB1G,UAAWI,EAAM4C,GAAGhD,UACpBtB,KAAMmF,GAAa3B,MAAM9B,EAAM4C,GAAGhD,WAAWmC,SAC7C5C,OAAQsE,GAAa3B,MAAM9B,EAAM4C,GAAGhD,WAAWT,OAC/CM,KAAMO,EAAM4C,GAAGnD,KACfJ,KAAMW,EAAM4C,GAAGvD,OAGbW,EAAM4C,GAAGhD,YAAcA,GACzBuG,EAAcG,KAAK,CACjB1G,UAAWI,EAAM4C,GAAGhD,UACpBtB,KAAMmF,GAAa3B,MAAMlC,GAAWmC,SACpC5C,OAAQsE,GAAa3B,MAAMlC,GAAWT,OACtCM,KAAMO,EAAM4C,GAAGnD,KACfJ,KAAMW,EAAM4C,GAAGvD,UAKhB8G,EAGT,SAASlD,EAAYsD,GACnB,IAAIC,EAAsC,GAiB1C,OAhBA7C,EAASyC,SAAQ,SAACC,EAAMzD,IAEnBe,EAASf,GAAGhD,YAAc2G,GACzB5C,EAASf,GAAGgB,eAAiBH,GAAaC,eAC3CC,EAASf,GAAGhD,YAAc6D,GAAaC,eACtCC,EAASf,GAAGgB,eAAiB2C,IAE/BC,EAAiBF,KAAK,CACpB1G,UAAW+D,EAASf,GAAGhD,UACvBtB,KAAMmF,GAAa3B,MAAM6B,EAASf,GAAGhD,WAAWmC,SAChD5C,OAAQsE,GAAa3B,MAAM6B,EAASf,GAAGhD,WAAWT,OAClDM,KAAMkE,EAASf,GAAGnD,KAClBJ,KAAMsE,EAASf,GAAGvD,UAIjBmH,EAGT,SAAS9D,IACP,IAAI+D,EAAqC,GAYzC,OAXA9C,EAASyC,SAAQ,SAACC,EAAMzD,GAClBe,EAASf,GAAGgB,eAAiBH,GAAaC,eAC5C+C,EAAgBH,KAAK,CACnB1G,UAAW+D,EAASf,GAAGhD,UACvBtB,KAAMmF,GAAa3B,MAAM6B,EAASf,GAAGhD,WAAWmC,SAChD5C,OAAQsE,GAAa3B,MAAM6B,EAASf,GAAGhD,WAAWT,OAClDM,KAAMkE,EAASf,GAAGnD,KAClBJ,KAAMsE,EAASf,GAAGvD,UAIjBoH,EAGT,OACE,eAAC,IAAD,WACE,cAAC,GAAD,CAAQ/C,cAAeD,GAAaC,gBACpC,eAAC+B,GAAD,CAAcC,OAAQvC,OAAOuD,YAAc,KAA3C,UACE,cAAC,KAAD,CACEC,KAAK,IACLC,OAAK,EACLC,UAAW,kBAAM,cAAC,EAAD,CAAM7E,SAAUA,EAAU8D,QAASA,OAEtD,cAAC,KAAD,CACEa,KAAK,UACLE,UAAW,kBAAM,cAACvC,GAAD,CAAQzC,KAAM4B,QAEjC,cAAC,KAAD,CACEkD,KAAK,aACLG,OAAQ,kBACN,eAAC,GAAD,WACE,cAACrE,GAAD,CAAWZ,KAAM4B,GAAcf,WAAYA,IAC3C,cAACM,GAAD,CACEnB,KAAM4B,GACNtF,OAAQ,EACR8E,YAAaA,EACbgD,WAAYA,UAKpB,cAAC,KAAD,CACEU,KAAK,SACLE,UAAW,kBACT,cAACnF,EAAD,CACEG,KAAM4B,GACNtF,OAAQ+E,SACNC,OAAOC,SAASC,SAASC,UACvBH,OAAOC,SAASC,SAASE,YAAY,KAAO,IAGhDvB,SAAUA,OAIhB,cAAC,KAAD,CACE2E,KAAK,WACLE,UAAW,kBACT,cAAC7D,GAAD,CACEnB,KAAM4B,GACNtF,OAAQ+E,SACNC,OAAOC,SAASC,SAASC,UACvBH,OAAOC,SAASC,SAASE,YAAY,KAAO,IAGhDN,YAAaA,EACbgD,WAAYA,a,udCrK1B,IAAMc,GAAcC,YAAH,MA0BjBC,SACE,eAAC,aAAD,WACE,cAACtB,GAAD,IACA,cAACoB,GAAD,OAEFpF,SAASuF,eAAe,W","file":"static/js/main.e11f580f.chunk.js","sourcesContent":["import { NavLink } from 'react-router-dom'\nimport styled from 'styled-components'\n\nconst StyledLink = styled(NavLink)`\n  color: black;\n  text-decoration: none;\n  height: 40px;\n  width: 40px;\n  margin: 10px;\n`\n\nconst StyledImg = styled.img`\n  border-radius: 50%;\n  width: 100%;\n  height: 100%;\n`\n\ninterface propsInterface {\n  userId: number\n  src: string\n}\n\nconst Avatar = (props: propsInterface) => (\n  <StyledLink to={'/user/' + props.userId}>\n    <StyledImg src={props.src} />\n  </StyledLink>\n)\nexport default Avatar\n","import { NavLink } from 'react-router-dom'\nimport styled from 'styled-components'\n\nconst StyledLink = styled(NavLink)`\n  color: black;\n  text-decoration: none;\n  font-weight: bold;\n`\n\ninterface propsInterface {\n  userId: number\n  name: string\n}\n\nconst Username = (props: propsInterface) => (\n  <StyledLink to={'/user/' + props.userId}>{props.name}</StyledLink>\n)\nexport default Username\n","export default __webpack_public_path__ + \"static/media/heart.b0e6508e.svg\";","export default __webpack_public_path__ + \"static/media/message.e5053226.svg\";","import React from 'react'\nimport styled from 'styled-components'\nimport Avatar from './Avatar'\nimport Username from './Username'\nimport HeartIcon from '../resources/heart.svg'\nimport MessageIcon from '../resources/message.svg'\n\nconst StyledPost = styled.div`\n  margin: 12px auto;\n  border: 1px solid gainsboro;\n  border-radius: 4px;\n  min-width: 360px;\n  width: 100%;\n  max-width: 600px;\n`\n\nconst PostHeader = styled.div`\n  display: flex;\n  align-items: center;\n`\n\nconst Date = styled.p`\n  color: #999;\n  font-size: 14px;\n  margin-left: 12px;\n`\n\nconst ImgActions = styled.div`\n  display: flex;\n  align-items: center;\n`\n\nconst ImgButton = styled.button`\n  margin: 12px -4px 0 4px;\n`\n\nconst PostImg = styled.img`\n  height: 300px;\n  width: 100%;\n  object-fit: cover;\n`\n\nconst Text = styled.pre`\n  white-space: pre-wrap;\n  word-wrap: break-word;\n  margin: 6px 12px 12px 12px;\n`\n\ninterface propsInterface {\n  name: string\n  avatar: string\n  text: string\n  date: string\n  id: number\n}\n\nexport default function Post(props: propsInterface) {\n  return (\n    <StyledPost>\n      <PostHeader>\n        <Avatar src={props.avatar} userId={props.id} />\n        <Username userId={props.id} name={props.name} />\n        <Date>{props.date}</Date>\n      </PostHeader>\n      <PostImg src='https://images.unsplash.com/photo-1612367197703-1e9839b09f63?ixid=MXwxMjA3fDB8MHxlZGl0b3JpYWwtZmVlZHw5fHx8ZW58MHx8fA%3D%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60' />\n      <ImgActions>\n        <ImgButton>\n          <img src={HeartIcon} alt='' />\n        </ImgButton>\n        <ImgButton>\n          <img src={MessageIcon} alt='' />\n        </ImgButton>\n      </ImgActions>\n      <Text>{props.text}</Text>\n    </StyledPost>\n  )\n}\n","import { getSnapshot, Instance, types } from 'mobx-state-tree'\n\nconst Post = types.model({\n  sender_id: types.number,\n  text: types.string,\n  date: types.string\n})\n\nconst Store = types\n  .model({\n    posts: types.map(Post)\n  })\n  .actions((self) => ({\n    createPost(sender_id: number, text: string, date: string) {\n      self.posts.set(\n        Math.floor(Math.random() * 100).toString(),\n        Post.create({ sender_id, text, date })\n      )\n      console.log(getSnapshot(store))\n    }\n  }))\n\nconst store = Store.create({\n  posts: {}\n})\n\nexport interface IPost extends Instance<typeof Post> {}\nexport interface IStore extends Instance<typeof store> {}\n\nexport default store\n","import React from 'react'\nimport styled from 'styled-components'\nimport Post from './Post'\nimport { renderInterface } from '../types'\nimport { observer } from 'mobx-react-lite'\nimport store, { IPost, IStore } from '../mobx-store'\nimport { getSnapshot } from 'mobx-state-tree'\n\nconst Container = styled.div`\n  width: 100%;\n  padding: 6px 12px;\n`\n\ninterface propsInterface {\n  getPosts: (sender_id?: number) => renderInterface[]\n  addPost: (postText: string) => void\n}\n\nconst Feed = observer((props: propsInterface) => (\n  <Container>\n    <button onClick={() => store.createPost(2, 'ban', '1 april')}>Add post</button>\n    {Object.values(getSnapshot(store).posts).map((post, index) => (\n      <Post\n        key={index}\n        id={index}\n        name={'vpech'}\n        avatar={'a'}\n        text={post.text}\n        date={post.date}\n      />\n    ))}\n  </Container>\n))\nexport default Feed\n","import React from 'react'\nimport styled from 'styled-components'\nimport Post from './Post'\nimport { stateInterface, renderInterface } from '../types'\nimport Avatar from './Avatar'\n\nconst ProfileDescription = styled.div`\n  display: flex;\n`\n\nconst Name = styled.h2`\n  font-size: 18px;\n  font-weight: normal;\n`\n\nconst Status = styled.p`\n  color: #999;\n  font-size: 15px;\n  grid-area: status;\n`\n\ninterface propsInterface {\n  data: stateInterface\n  userId: number\n  getPosts: (sender_id?: number) => renderInterface[]\n}\n\nexport default function Profile(props: propsInterface) {\n  document.title = props.data.users[props.userId].username + 'profile'\n  return (\n    <>\n      <ProfileDescription>\n        <Avatar\n          src={props.data.users[props.userId].avatar}\n          userId={props.userId}\n        />\n        <Name>{props.data.users[props.userId].username}</Name>\n        <Status>Ban</Status>\n      </ProfileDescription>\n      {props.getPosts(props.userId).map((post, index) => (\n        <Post\n          id={index}\n          key={index}\n          name={post.name}\n          avatar={post.avatar}\n          text={post.text}\n          date={post.date}\n        />\n      ))}\n    </>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst StyledInput = styled.input`\n  width: 220px;\n  height: 26px;\n  padding: 4px 12px;\n  display: block;\n  font-size: 15px;\n  text-align: center;\n  margin: 8px auto;\n  border: 1px solid gainsboro;\n  border-radius: 4px;\n  :focus {\n    text-align: left;\n  }\n`\n\nexport default function Searchbar() {\n  return <StyledInput type='text' placeholder='Search' />\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport Searchbar from './Searchbar'\nimport Avatar from './Avatar'\nimport { NavLink } from 'react-router-dom'\nimport { stateInterface, renderInterface } from '../types'\nimport Dialog from './Dialog'\n\nconst Page = styled.div`\n  display: flex;\n`\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nconst DialogLink = styled(NavLink)`\n  height: 74px;\n  width: 100%;\n  text-decoration: none;\n  color: black;\n  display: grid;\n  grid-template-areas: 'avatar name date' 'avatar text text';\n  grid-template-columns: 74px 1fr 148px;\n  grid-template-rows: 37px 37px;\n`\n\nconst Name = styled.p`\n  grid-area: name;\n  align-self: start;\n`\n\nconst LastMessage = styled.p`\n  color: #999;\n  grid-area: text;\n  align-self: end;\n  font-size: 15px;\n`\n\nconst Date = styled.p`\n  color: #999;\n  grid-area: date;\n  align-self: end;\n  font-size: 14px;\n  text-align: end;\n  margin: 12px;\n`\n\ninterface propsInterface {\n  data: stateInterface\n  getDialogs: () => renderInterface[]\n}\n\nexport default function Messenger(props: propsInterface) {\n  document.title = 'Chats'\n  return (\n    <Page>\n      <Container>\n        <Searchbar />\n        {props.getDialogs().map((dialog, i) => (\n          <DialogLink key={i} to={'/dialog/' + dialog.sender_id}>\n            <Avatar src={dialog.avatar} userId={dialog.sender_id} />\n            <Name>{dialog.name}</Name>\n            <Date>{dialog.date}</Date>\n            <LastMessage>{dialog.text}</LastMessage>\n          </DialogLink>\n        ))}\n      </Container>\n    </Page>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport Avatar from './Avatar'\nimport TextareaForm from './TextareaForm'\nimport { stateInterface, renderInterface } from '../types'\n\nconst PageContent = styled.div`\n  margin-top: 6px;\n  display: flex;\n  flex-direction: column;\n`\n\nconst Messages = styled.div``\n\nconst StyledMessage = styled.div`\n  width: 100%;\n  height: auto;\n  text-decoration: none;\n  color: black;\n  display: grid;\n  grid-template-areas: 'avatar name date' 'avatar text text';\n  grid-template-columns: 74px 1fr 148px;\n  grid-template-rows: 37px 1fr;\n`\n\nconst Name = styled.p`\n  grid-area: name;\n  align-self: start;\n`\n\nconst Date = styled.p`\n  color: #999;\n  font-size: 14px;\n  grid-area: date;\n  text-align: end;\n  margin: 12px;\n`\n\nconst Text = styled.pre`\n  color: #333;\n  grid-area: text;\n  white-space: pre-wrap;\n  align-self: center;\n  padding-right: 6px;\n`\n\ninterface propsInterface {\n  data: stateInterface\n  userId: number\n  getMessages: (companion_id: number) => renderInterface[]\n  addMessage: (messageText: string) => void\n}\n\nexport default function Dialog(props: propsInterface) {\n  document.title = 'Dialog with ' + props.data.users[props.userId].username\n  return (\n    <>\n      <PageContent>\n        <Messages>\n          {props\n            .getMessages(\n              parseInt(\n                window.location.pathname.substring(\n                  window.location.pathname.lastIndexOf('/') + 1\n                )\n              )\n            )\n            .map((message, index) => (\n              <StyledMessage key={index}>\n                <Avatar src={message.avatar} userId={message.sender_id} />\n                <Name>{message.name}</Name>\n                <Text>{message.text}</Text>\n                <Date>{message.date}</Date>\n              </StyledMessage>\n            ))}\n        </Messages>\n        {/* <TextareaForm\n          icon={BlueSendIcon}\n          placeholder='Your message'\n          onclick={props.addMessage}\n        /> */}\n      </PageContent>\n    </>\n  )\n}\n","export let initialState = {\n  currentUserId: 0,\n  users: [\n    {\n      id: 0,\n      username: 'vpech',\n      avatar:\n        'https://images.unsplash.com/photo-1503212556734-c0ca0c49c8b0?ixlib=rb-1.2.1&ixid=MXwxMjA3fDB8MHxzZWFyY2h8MjF8fHNpbGhvdWV0dGV8ZW58MHwyfDB8&auto=format&fit=crop&w=400&q=60'\n    },\n    {\n      id: 1,\n      username: 'nnull',\n      avatar:\n        'https://images.unsplash.com/photo-1581456495146-65a71b2c8e52?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=633&q=80'\n    },\n    {\n      id: 2,\n      username: 'sergejar',\n      avatar:\n        'https://images.unsplash.com/photo-1500389723459-ca24a5564899?ixlib=rb-1.2.1&ixid=MXwxMjA3fDB8MHxzZWFyY2h8MXx8aHVtYW4lMjBzaGFkb3d8ZW58MHx8MHw%3D&auto=format&fit=crop&w=400&q=60'\n    }\n  ],\n  messages: [\n    {\n      sender_id: 0,\n      recipient_id: 1,\n      text: 'Sup',\n      date: '11 Nov, 10:08'\n    },\n    {\n      sender_id: 1,\n      recipient_id: 0,\n      text: 'Hey',\n      date: '11 Nov, 10:47'\n    }\n  ],\n  posts: [\n    {\n      sender_id: 0,\n      text: 'Sample post, u know',\n      date: '11 Nov, 17:08'\n    },\n    {\n      sender_id: 1,\n      text: 'Another sample post',\n      date: '12 Nov, 17:42'\n    }\n  ]\n}\n\nexport function getCurrentDate() {\n  return new Intl.DateTimeFormat('en-GB', {\n    month: 'short',\n    day: 'numeric',\n    hour: 'numeric',\n    minute: 'numeric'\n  }).format(Date.now())\n}\n","import React from 'react'\nimport Searchbar from './Searchbar'\nimport { stateInterface } from '../types'\n\ninterface propsInterface {\n  data: stateInterface\n}\n\nexport default function Search(props: propsInterface) {\n  document.title = 'Search people'\n  return (\n    <>\n      <Searchbar />\n    </>\n  )\n}\n","export default __webpack_public_path__ + \"static/media/profile.cce85dcf.svg\";","export default __webpack_public_path__ + \"static/media/home.12653022.svg\";","export default __webpack_public_path__ + \"static/media/search.9e893c64.svg\";","export default __webpack_public_path__ + \"static/media/logo.3a1ea0a8.svg\";","import React, { useState } from 'react'\nimport { NavLink, useHistory } from 'react-router-dom'\nimport ProfileIcon from '../resources/profile.svg'\nimport HomeIcon from '../resources/home.svg'\nimport MessengerIcon from '../resources/message.svg'\nimport SearchIcon from '../resources/search.svg'\nimport LogoIcon from '../resources/logo.svg'\nimport styled from 'styled-components'\n\nconst AppHeader = styled.header`\n  height: 50px;\n  width: 100%;\n  margin: 0 auto;\n  position: sticky;\n  top: 0;\n  display: flex;\n  justify-content: space-evenly;\n  z-index: 10;\n  background: white;\n  border-bottom: 1px solid gainsboro;\n`\n\nconst HeaderLogo = styled(NavLink)`\n  width: 200px;\n  height: 100%;\n  color: black;\n  text-decoration: none;\n  font-weight: bold;\n  font-size: 18px;\n  display: flex;\n  align-items: center;\n  justify-content: space-evenly;\n`\n\nconst StyledNav = styled.nav`\n  width: 200px;\n  height: 100%;\n  display: flex;\n`\n\nconst StyledLink = styled(NavLink)<{ active: boolean }>`\n  border-bottom: ${(props) => props.active && '2px solid black'};\n  padding: 13px;\n`\n\ninterface propsInterface {\n  currentUserId: number\n}\n\nconst Header = (props: propsInterface) => {\n  let [url, setUrl] = useState(window.location.pathname)\n\n  useHistory().listen((location) => {\n    setUrl(location.pathname)\n  })\n\n  return (\n    <AppHeader>\n      <HeaderLogo to='/'>\n        <img src={LogoIcon} alt='' />\n        Social network\n      </HeaderLogo>\n      <StyledNav>\n        <StyledLink to='/' active={url === '/'}>\n          <img src={HomeIcon} alt='' />\n        </StyledLink>\n        <StyledLink to='/search' active={url.includes('/search')}>\n          <img src={SearchIcon} alt='' />\n        </StyledLink>\n        <StyledLink to='/messenger' active={url.includes('/messenger')}>\n          <img src={MessengerIcon} alt='' />\n        </StyledLink>\n        <StyledLink to={'/user/' + props.currentUserId} active={url.includes('/user')}>\n          <img src={ProfileIcon} alt='' />\n        </StyledLink>\n      </StyledNav>\n    </AppHeader>\n  )\n}\nexport default Header\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport Feed from './Feed'\nimport Profile from './Profile'\nimport Messenger from './Messenger'\nimport { BrowserRouter, Route } from 'react-router-dom'\nimport Dialog from './Dialog'\nimport { initialState, getCurrentDate } from '../store'\nimport { renderInterface } from '../types'\nimport Search from './Search'\nimport Header from './Header'\n\nconst AppContainer = styled.div<{ height: string }>`\n  max-width: 800px;\n  width: 100%;\n  height: ${(props) => props.height};\n  margin: 0 auto;\n  display: flex;\n`\n\nconst Container = styled.div`\n  display: flex;\n`\n\nexport default function App() {\n  const [posts, setPost] = useState(initialState.posts)\n  const [messages, setMessage] = useState(initialState.messages)\n\n  function addPost(postText: string) {\n    if (postText) {\n      setPost((prev) => [\n        ...prev,\n        {\n          sender_id: initialState.currentUserId,\n          text: postText,\n          date: getCurrentDate()\n        }\n      ])\n    }\n  }\n\n  function addMessage(messageText: string) {\n    if (messageText) {\n      setMessage((prev) => [\n        ...prev,\n        {\n          sender_id: initialState.currentUserId,\n          recipient_id: 1,\n          text: messageText,\n          date: getCurrentDate()\n        }\n      ])\n    }\n  }\n\n  function getPosts(sender_id: number = -1) {\n    let postsToRender: renderInterface[] = []\n    posts.forEach((item, i) => {\n      if (sender_id === -1) {\n        postsToRender.push({\n          sender_id: posts[i].sender_id,\n          name: initialState.users[posts[i].sender_id].username,\n          avatar: initialState.users[posts[i].sender_id].avatar,\n          text: posts[i].text,\n          date: posts[i].date\n        })\n      } else {\n        if (posts[i].sender_id === sender_id) {\n          postsToRender.push({\n            sender_id: posts[i].sender_id,\n            name: initialState.users[sender_id].username,\n            avatar: initialState.users[sender_id].avatar,\n            text: posts[i].text,\n            date: posts[i].date\n          })\n        }\n      }\n    })\n    return postsToRender\n  }\n\n  function getMessages(companion_id: number) {\n    let messagesToRender: renderInterface[] = []\n    messages.forEach((item, i) => {\n      if (\n        (messages[i].sender_id === companion_id &&\n          messages[i].recipient_id === initialState.currentUserId) ||\n        (messages[i].sender_id === initialState.currentUserId &&\n          messages[i].recipient_id === companion_id)\n      ) {\n        messagesToRender.push({\n          sender_id: messages[i].sender_id,\n          name: initialState.users[messages[i].sender_id].username,\n          avatar: initialState.users[messages[i].sender_id].avatar,\n          text: messages[i].text,\n          date: messages[i].date\n        })\n      }\n    })\n    return messagesToRender\n  }\n\n  function getDialogs() {\n    let dialogsToRender: renderInterface[] = []\n    messages.forEach((item, i) => {\n      if (messages[i].recipient_id === initialState.currentUserId) {\n        dialogsToRender.push({\n          sender_id: messages[i].sender_id,\n          name: initialState.users[messages[i].sender_id].username,\n          avatar: initialState.users[messages[i].sender_id].avatar,\n          text: messages[i].text,\n          date: messages[i].date\n        })\n      }\n    })\n    return dialogsToRender\n  }\n\n  return (\n    <BrowserRouter>\n      <Header currentUserId={initialState.currentUserId} />\n      <AppContainer height={window.innerHeight + 'px'}>\n        <Route\n          path='/'\n          exact\n          component={() => <Feed getPosts={getPosts} addPost={addPost} />}\n        />\n        <Route\n          path='/search'\n          component={() => <Search data={initialState} />}\n        />\n        <Route\n          path='/messenger'\n          render={() => (\n            <Container>\n              <Messenger data={initialState} getDialogs={getDialogs} />\n              <Dialog\n                data={initialState}\n                userId={0}\n                getMessages={getMessages}\n                addMessage={addMessage}\n              />\n            </Container>\n          )}\n        />\n        <Route\n          path='/user/'\n          component={() => (\n            <Profile\n              data={initialState}\n              userId={parseInt(\n                window.location.pathname.substring(\n                  window.location.pathname.lastIndexOf('/') + 1\n                )\n              )}\n              getPosts={getPosts}\n            />\n          )}\n        />\n        <Route\n          path='/dialog/'\n          component={() => (\n            <Dialog\n              data={initialState}\n              userId={parseInt(\n                window.location.pathname.substring(\n                  window.location.pathname.lastIndexOf('/') + 1\n                )\n              )}\n              getMessages={getMessages}\n              addMessage={addMessage}\n            />\n          )}\n        />\n      </AppContainer>\n    </BrowserRouter>\n  )\n}\n","import { createGlobalStyle } from 'styled-components'\nimport * as React from 'react'\nimport * as ReactDOM from 'react-dom'\nimport App from './components/App'\n\nconst GlobalStyle = createGlobalStyle`\n\tbody {\n\t\tmargin: 0;\n\t\tfont-family: sans-serif;\n\t\t-webkit-font-smoothing: antialiased;\n\t\t-moz-osx-font-smoothing: grayscale;\n\t}\n\n\t:focus {\n\t\toutline: none;\n\t}\n\n\tbutton {\n\t\tbackground-color: transparent;\n\t\tborder: none;\n\t\tpadding: none;\n\t}\n\n\ttextarea, pre {\n\t\tresize: none;\n\t\toverflow: auto;\n\t\tfont-family: sans-serif;\n\t\tfont-style: normal;\n\t}\n`\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n    <GlobalStyle />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}