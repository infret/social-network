{"version":3,"sources":["resources/profile.svg","resources/home.svg","resources/message.svg","resources/search.svg","components/Navbar.tsx","components/Avatar.tsx","components/Username.tsx","components/Post.tsx","components/PageHeader.tsx","components/Feed.tsx","components/Profile.tsx","components/Searchbar.tsx","components/Messenger.tsx","components/Dialog.tsx","store.ts","resources/logo.svg","components/App.tsx","index.tsx"],"names":["StyledNav","styled","nav","StyledLink","NavLink","StyledImg","img","Sidebar","props","to","src","HomeIcon","SearchIcon","MessengerIcon","currentUserId","ProfileIcon","Avatar","userId","Username","name","StyledPost","div","StyledAvatar","Date","p","Text","pre","Post","avatar","id","text","date","StyledHeader","header","PageTitle","h1","PageHeader","title","PageContent","Feed","document","getPosts","map","post","index","ProfileDescription","Name","h2","Status","Profile","data","users","username","StyledSearchbar","form","StyledInput","input","Searchbar","type","placeholder","DialogLink","LastMessage","Messenger","getDialogs","dialog","i","sender_id","Messages","StyledMessage","Dialog","getMessages","parseInt","window","location","pathname","substring","lastIndexOf","message","initialState","messages","recipient_id","posts","getCurrentDate","Intl","DateTimeFormat","month","day","hour","minute","format","now","AppContainer","height","AppHeader","HeaderContainer","AppContent","AppLogo","App","useState","setPost","setMessage","addPost","postText","prev","addMessage","messageText","postsToRender","forEach","item","push","companion_id","messagesToRender","dialogsToRender","BigLogo","innerHeight","path","component","exact","GlobalStyle","createGlobalStyle","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.e2c51395.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/profile.80378613.svg\";","export default __webpack_public_path__ + \"static/media/home.5658da3a.svg\";","export default __webpack_public_path__ + \"static/media/message.f566edd5.svg\";","export default __webpack_public_path__ + \"static/media/search.26aebde9.svg\";","import React from 'react'\nimport styled from 'styled-components'\nimport { NavLink } from 'react-router-dom'\nimport ProfileIcon from '../resources/profile.svg'\nimport HomeIcon from '../resources/home.svg'\nimport MessengerIcon from '../resources/message.svg'\nimport SearchIcon from '../resources/search.svg'\n\nconst StyledNav = styled.nav`\n  position: absolute;\n  top: 0;\n  right: 0;\n  height: 50px;\n  display: flex;\n  @media (max-width: 480px) {\n    width: 100%;\n    top: auto;\n    bottom: 0;\n    justify-content: space-evenly;\n    border-top: 1px solid gainsboro;\n  }\n`\n\nconst StyledLink = styled(NavLink)`\n  height: 100%;\n  width: 60px;\n  display: flex;\n  align-items: center;\n`\n\nconst StyledImg = styled.img`\n  margin: 0 10px;\n  width: auto;\n  height: 28px;\n`\n\ninterface propsInterface {\n  currentUserId: number\n}\n\nexport default function Sidebar(props: propsInterface) {\n  return (\n    <StyledNav>\n      <StyledLink to='/feed'>\n        <StyledImg src={HomeIcon} />\n      </StyledLink>\n      <StyledLink to='/search'>\n        <StyledImg src={SearchIcon} />\n      </StyledLink>\n      <StyledLink to='/messenger'>\n        <StyledImg src={MessengerIcon} />\n      </StyledLink>\n      <StyledLink to={'/user/' + props.currentUserId}>\n        <StyledImg src={ProfileIcon} />\n      </StyledLink>\n    </StyledNav>\n  )\n}\n","import {NavLink} from 'react-router-dom'\nimport styled from 'styled-components'\n\nconst StyledLink = styled(NavLink)`\n\tcolor: black;\n\ttext-decoration: none;\n\theight: 50px;\n\twidth: 50px;\n\tmargin: 12px;\n`\n\nconst StyledImg = styled.img`\n\tborder-radius: 50%;\n\twidth: 100%;\n\theight: 100%;\n`\n\ninterface propsInterface {\n\tuserId: number,\n\tsrc: string\n}\n\nconst Avatar = (props: propsInterface) => (<StyledLink to={'/user/' + props.userId}><StyledImg src={props.src}/></StyledLink>)\nexport default Avatar","import {NavLink} from 'react-router-dom'\nimport styled from 'styled-components'\n\nconst StyledLink = styled(NavLink)`\n\tcolor: black;\n\ttext-decoration: none;\n\talign-self: end;\n`\n\ninterface propsInterface {\n\tuserId: number,\n\tname: string\n}\n\nconst Username = (props: propsInterface) => (<StyledLink to={'/user/' + props.userId}>{props.name}</StyledLink>)\nexport default Username","import React from 'react'\nimport styled from 'styled-components'\nimport Avatar from './Avatar'\nimport Username from './Username'\n\nconst StyledPost = styled.div`\n\tdisplay: grid;\n\tgrid-template-areas: 'avatar name' 'avatar date' 'text text';\n\tgrid-template-columns: 74px 1fr;\n\tgrid-template-rows: 37px 37px 1fr;\n\ttext-decoration: none;\n\tmargin-top: 6px;\n`\n\nconst StyledAvatar = styled(Avatar)`\n  height: 50px;\n  width: 50px;\n  margin: 12px;\n  grid-area: avatar;\n`\n\nconst Date = styled.p`\n  color: #999;\n  grid-area: date;\n  align-self: end;\n  font-size: 14px;\n`\n\nconst Text = styled.pre`\n  grid-area: text;\n  white-space: pre-wrap;\n  word-wrap: break-word;\n  margin: 0 12px 12px 12px;\n`\n\ninterface propsInterface {\n  name: string\n  avatar: string\n  text: string\n  date: string\n  id: number\n}\n\nexport default function Post(props: propsInterface) {\n  return (\n    <StyledPost>\n      <StyledAvatar src={props.avatar} userId={props.id} />\n      <Username userId={props.id} name={props.name} />\n      <Text>{props.text}</Text>\n      <Date>{props.date}</Date>\n    </StyledPost>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst StyledHeader = styled.header`\n  height: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  position: sticky;\n  top: 0;\n`\n\nconst PageTitle = styled.h1`\n  font-size: 18px;\n  margin: 0 auto;\n  @media (min-width: 480px) {\n    display: none;\n  }\n`\n\ninterface propsInterface {\n  title: string\n}\n\nexport default function PageHeader(props: propsInterface) {\n  return (\n    <StyledHeader>\n      <PageTitle>{props.title}</PageTitle>\n    </StyledHeader>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport Post from './Post'\nimport PageHeader from './PageHeader'\nimport TextareaForm from './TextareaForm'\nimport { renderInterface } from '../types'\n\nconst PageContent = styled.div`\n  overflow-y: scroll;\n  height: calc(100vh - 58px);\n  max-height: calc(100vh - 58px);\n`\n\ninterface propsInterface {\n  getPosts: (sender_id?: number) => renderInterface[]\n  addPost: (postText: string) => void\n}\n\nexport default function Feed(props: propsInterface) {\n  document.title = 'News'\n  return (\n    <>\n      <PageHeader title='News' />\n      <PageContent>\n        {/* <TextareaForm placeholder=\"What's new?\" onclick={props.addPost} /> */}\n        {props.getPosts().map((post, index) => (\n          <Post\n            key={index}\n            id={index}\n            name={post.name}\n            avatar={post.avatar}\n            text={post.text}\n            date={post.date}\n          />\n        ))}\n      </PageContent>\n    </>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport PageHeader from './PageHeader'\nimport Post from './Post'\nimport { stateInterface, renderInterface } from '../types'\n\nconst ProfileDescription = styled.div`\n  display: flex;\n`\n\nconst StyledAvatar = styled.img`\n  height: 78px;\n  width: 78px;\n  border-radius: 50%;\n  margin: 16px;\n`\n\nconst Name = styled.h2`\n  font-size: 18px;\n  font-weight: normal;\n`\n\nconst Status = styled.p`\n  color: #999;\n  font-size: 15px;\n  grid-area: status;\n`\n\ninterface propsInterface {\n  data: stateInterface\n  userId: number\n  getPosts: (sender_id?: number) => renderInterface[]\n}\n\nexport default function Profile(props: propsInterface) {\n  document.title = props.data.users[props.userId].username\n  return (\n    <>\n      <PageHeader title='Profile' />\n      <ProfileDescription>\n        <StyledAvatar src={props.data.users[props.userId].avatar} />\n        <Name>{props.data.users[props.userId].username}</Name>\n        <Status>Ban</Status>\n      </ProfileDescription>\n      {props.getPosts(props.userId).map((post, index) => (\n        <Post\n          id={index}\n          key={index}\n          name={post.name}\n          avatar={post.avatar}\n          text={post.text}\n          date={post.date}\n        />\n      ))}\n    </>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport WhiteSearchIcon from '../resources/white-search-icon.svg'\n\nconst StyledSearchbar = styled.form`\n  height: 34px;\n  display: flex;\n  align-items: center;\n  padding: 12px;\n`\n\nconst StyledInput = styled.input`\n  width: calc(100% - 40px);\n  font-size: 14px;\n  border: none;\n  border-radius: 4px 0 0 6px;\n  height: 34px;\n  padding-left: 12px;\n`\n\nexport default function Searchbar() {\n  return (\n    <StyledSearchbar>\n      <StyledInput type='text' placeholder='Search' />\n    </StyledSearchbar>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport Searchbar from './Searchbar'\nimport Avatar from './Avatar'\nimport { NavLink } from 'react-router-dom'\nimport PageHeader from './PageHeader'\nimport { stateInterface, renderInterface } from '../types'\n\nconst DialogLink = styled(NavLink)`\n  height: 74px;\n  width: 100%;\n  text-decoration: none;\n  color: black;\n  display: grid;\n  grid-template-areas: 'avatar name date' 'avatar text text';\n  grid-template-columns: 74px 1fr 148px;\n  grid-template-rows: 37px 37px;\n`\n\nconst StyledAvatar = styled(Avatar)`\n  height: 50px;\n  width: 50px;\n  margin: 12px;\n  grid-area: avatar;\n`\n\nconst Name = styled.p`\n  grid-area: name;\n  align-self: start;\n`\n\nconst LastMessage = styled.p`\n  color: #999;\n  grid-area: text;\n  align-self: end;\n  font-size: 15px;\n`\n\nconst Date = styled.p`\n  color: #999;\n  grid-area: date;\n  align-self: end;\n  font-size: 14px;\n  text-align: end;\n  margin: 12px;\n`\n\ninterface propsInterface {\n  data: stateInterface\n  getDialogs: () => renderInterface[]\n}\n\nexport default function Messenger(props: propsInterface) {\n  document.title = 'Chats'\n  return (\n    <>\n      <PageHeader title='Chats' />\n      <div>\n        <Searchbar />\n        {props.getDialogs().map((dialog, i) => (\n          <DialogLink key={i} to={'/dialog/' + dialog.sender_id}>\n            <StyledAvatar src={dialog.avatar} userId={dialog.sender_id} />\n            <Name>{dialog.name}</Name>\n            <Date>{dialog.date}</Date>\n            <LastMessage>{dialog.text}</LastMessage>\n          </DialogLink>\n        ))}\n      </div>\n    </>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport PageHeader from './PageHeader'\nimport Avatar from './Avatar'\nimport TextareaForm from './TextareaForm'\nimport { stateInterface, renderInterface } from '../types'\n\nconst PageContent = styled.div`\n  margin-top: 6px;\n  height: calc(100vh - 58px);\n  max-height: calc(100vh - 58px);\n  display: flex;\n  flex-direction: column;\n`\n\nconst Messages = styled.div`\n  overflow-y: scroll;\n  height: calc(100vh - 58px);\n  max-height: calc(100vh - 58px);\n`\n\nconst StyledMessage = styled.div`\n  width: 100%;\n  height: auto;\n  text-decoration: none;\n  color: black;\n  display: grid;\n  grid-template-areas: 'avatar name date' 'avatar text text';\n  grid-template-columns: 74px 1fr 148px;\n  grid-template-rows: 37px 1fr;\n`\n\nconst StyledAvatar = styled(Avatar)`\n  height: 50px;\n  width: 50px;\n  margin: 12px;\n  grid-area: avatar;\n`\n\nconst Name = styled.p`\n  grid-area: name;\n  align-self: start;\n`\n\nconst Date = styled.p`\n  color: #999;\n  font-size: 14px;\n  grid-area: date;\n  text-align: end;\n  margin: 12px;\n`\n\nconst Text = styled.pre`\n  color: #333;\n  grid-area: text;\n  overflow: hidden;\n  white-space: pre-wrap;\n  align-self: center;\n  padding-right: 6px;\n`\n\ninterface propsInterface {\n  data: stateInterface\n  userId: number\n  getMessages: (companion_id: number) => renderInterface[]\n  addMessage: (messageText: string) => void\n}\n\nexport default function Dialog(props: propsInterface) {\n  document.title = 'Dialog'\n  return (\n    <div>\n      <PageHeader title={props.data.users[props.userId].username} />\n      <PageContent>\n        <Messages>\n          {props\n            .getMessages(\n              parseInt(\n                window.location.pathname.substring(\n                  window.location.pathname.lastIndexOf('/') + 1\n                )\n              )\n            )\n            .map((message, index) => (\n              <StyledMessage key={index}>\n                <StyledAvatar src={message.avatar} userId={message.sender_id} />\n                <Name>{message.name}</Name>\n                <Text>{message.text}</Text>\n                <Date>{message.date}</Date>\n              </StyledMessage>\n            ))}\n        </Messages>\n        {/* <TextareaForm\n          icon={BlueSendIcon}\n          placeholder='Your message'\n          onclick={props.addMessage}\n        /> */}\n      </PageContent>\n    </div>\n  )\n}\n","export let initialState = {\n  currentUserId: 0,\n  users: [\n    {\n\t\t\tid: 0,\n      username: 'vpech',\n      avatar:\n        'https://images.unsplash.com/photo-1503212556734-c0ca0c49c8b0?ixlib=rb-1.2.1&ixid=MXwxMjA3fDB8MHxzZWFyY2h8MjF8fHNpbGhvdWV0dGV8ZW58MHwyfDB8&auto=format&fit=crop&w=400&q=60'\n    },\n    {\n\t\t\tid: 1,\n      username: 'nnull',\n      avatar:\n        'https://images.unsplash.com/photo-1581456495146-65a71b2c8e52?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=633&q=80'\n    },\n    {\n\t\t\tid: 2,\n      username: 'sergejar',\n      avatar:\n        'https://images.unsplash.com/photo-1500389723459-ca24a5564899?ixlib=rb-1.2.1&ixid=MXwxMjA3fDB8MHxzZWFyY2h8MXx8aHVtYW4lMjBzaGFkb3d8ZW58MHx8MHw%3D&auto=format&fit=crop&w=400&q=60'\n    }\n  ],\n  messages: [\n    {\n      sender_id: 0,\n      recipient_id: 1,\n      text: 'Sup',\n      date: '11 Nov, 10:08'\n    },\n    {\n      sender_id: 1,\n      recipient_id: 0,\n      text: 'Hey',\n      date: '11 Nov, 10:47'\n    }\n  ],\n  posts: [\n    {\n      sender_id: 0,\n      text: 'Somebody once told me',\n      date: '11 Nov, 17:08'\n    },\n    {\n      sender_id: 1,\n      text: 'The world is gonna roll me',\n      date: '12 Nov, 17:42'\n    }\n  ]\n}\n\nexport function getCurrentDate() {\n  return new Intl.DateTimeFormat('en-GB', {\n    month: 'short',\n    day: 'numeric',\n    hour: 'numeric',\n    minute: 'numeric'\n  }).format(Date.now())\n}\n","export default __webpack_public_path__ + \"static/media/logo.16ca5561.svg\";","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport Navbar from './Navbar'\nimport Feed from './Feed'\nimport Profile from './Profile'\nimport Messenger from './Messenger'\nimport Search from './Search'\nimport { BrowserRouter, Route } from 'react-router-dom'\nimport Dialog from './Dialog'\nimport { initialState, getCurrentDate } from '../store'\nimport { renderInterface } from '../types'\nimport BigLogo from '../resources/logo.svg'\n\nconst AppContainer = styled.div<{ height: string }>`\n  position: relative;\n  max-width: 800px;\n  width: 100vw;\n  height: ${(props) => props.height};\n  margin: 0 auto;\n  display: flex;\n`\n\nconst AppHeader = styled.header`\n  height: 50px;\n  width: 100%;\n  position: fixed;\n  border-bottom: 1px solid gainsboro;\n`\n\nconst HeaderContainer = styled.div`\n  width: 100vw;\n  max-width: 800px;\n  height: 100%;\n  margin: 0 auto;\n  font-weight: bold;\n  font-size: 18px;\n  display: flex;\n  align-items: center;\n  @media (max-width: 480px) {\n    display: none;\n  }\n`\n\nconst AppContent = styled.div`\n  width: 100%;\n`\n\nconst AppLogo = styled.img`\n  margin: 0 8px 0 16px;\n  height: 32px;\n`\n\nexport default function App() {\n  const [posts, setPost] = useState(initialState.posts)\n  const [messages, setMessage] = useState(initialState.messages)\n\n  function addPost(postText: string) {\n    if (postText) {\n      setPost((prev) => [\n        ...prev,\n        {\n          sender_id: initialState.currentUserId,\n          text: postText,\n          date: getCurrentDate()\n        }\n      ])\n    }\n  }\n\n  function addMessage(messageText: string) {\n    if (messageText) {\n      setMessage((prev) => [\n        ...prev,\n        {\n          sender_id: initialState.currentUserId,\n          recipient_id: 1,\n          text: messageText,\n          date: getCurrentDate()\n        }\n      ])\n    }\n  }\n\n  function getPosts(sender_id: number = -1) {\n    let postsToRender: renderInterface[] = []\n    posts.forEach((item, i) => {\n      if (sender_id === -1) {\n        postsToRender.push({\n          sender_id: posts[i].sender_id,\n          name: initialState.users[posts[i].sender_id].username,\n          avatar: initialState.users[posts[i].sender_id].avatar,\n          text: posts[i].text,\n          date: posts[i].date\n        })\n      } else {\n        if (posts[i].sender_id === sender_id) {\n          postsToRender.push({\n            sender_id: posts[i].sender_id,\n            name: initialState.users[sender_id].username,\n            avatar: initialState.users[sender_id].avatar,\n            text: posts[i].text,\n            date: posts[i].date\n          })\n        }\n      }\n    })\n    return postsToRender\n  }\n\n  function getMessages(companion_id: number) {\n    let messagesToRender: renderInterface[] = []\n    messages.forEach((item, i) => {\n      if (\n        (messages[i].sender_id === companion_id &&\n          messages[i].recipient_id === initialState.currentUserId) ||\n        (messages[i].sender_id === initialState.currentUserId &&\n          messages[i].recipient_id === companion_id)\n      ) {\n        messagesToRender.push({\n          sender_id: messages[i].sender_id,\n          name: initialState.users[messages[i].sender_id].username,\n          avatar: initialState.users[messages[i].sender_id].avatar,\n          text: messages[i].text,\n          date: messages[i].date\n        })\n      }\n    })\n    return messagesToRender\n  }\n\n  function getDialogs() {\n    let dialogsToRender: renderInterface[] = []\n    messages.forEach((item, i) => {\n      if (messages[i].recipient_id === initialState.currentUserId) {\n        dialogsToRender.push({\n          sender_id: messages[i].sender_id,\n          name: initialState.users[messages[i].sender_id].username,\n          avatar: initialState.users[messages[i].sender_id].avatar,\n          text: messages[i].text,\n          date: messages[i].date\n        })\n      }\n    })\n    return dialogsToRender\n  }\n\n  return (\n    <BrowserRouter>\n      <AppHeader>\n        <HeaderContainer>\n          <AppLogo src={BigLogo} />\n          Social network\n        </HeaderContainer>\n      </AppHeader>\n      <AppContainer height={window.innerHeight + 'px'}>\n        <Navbar currentUserId={initialState.currentUserId} />\n        <AppContent>\n          <Route\n            path='/user/'\n            component={() => (\n              <Profile\n                data={initialState}\n                userId={parseInt(\n                  window.location.pathname.substring(\n                    window.location.pathname.lastIndexOf('/') + 1\n                  )\n                )}\n                getPosts={getPosts}\n              />\n            )}\n          />\n          <Route\n            path='/'\n            exact\n            component={() => <Feed getPosts={getPosts} addPost={addPost} />}\n          />\n          <Route\n            path='/messenger'\n            component={() => (\n              <Messenger data={initialState} getDialogs={getDialogs} />\n            )}\n          />\n          <Route\n            path='/dialog/'\n            component={() => (\n              <Dialog\n                data={initialState}\n                userId={parseInt(\n                  window.location.pathname.substring(\n                    window.location.pathname.lastIndexOf('/') + 1\n                  )\n                )}\n                getMessages={getMessages}\n                addMessage={addMessage}\n              />\n            )}\n          />\n        </AppContent>\n      </AppContainer>\n    </BrowserRouter>\n  )\n}\n","import { createGlobalStyle } from 'styled-components'\nimport * as React from 'react'\nimport * as ReactDOM from 'react-dom'\nimport App from './components/App'\n\nconst GlobalStyle = createGlobalStyle`\n\tbody {\n\t\tmargin: 0;\n\t\tfont-family: sans-serif;\n\t\t-webkit-font-smoothing: antialiased;\n\t\t-moz-osx-font-smoothing: grayscale;\n\t\toverflow: hidden;\n\t}\n\n\t:focus {\n\t\toutline: none;\n\t}\n\n\ttextarea, pre {\n\t\tresize: none;\n\t\toverflow: auto;\n\t\tfont-family: sans-serif;\n\t\tfont-style: normal;\n\t}\n`\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n    <GlobalStyle />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}